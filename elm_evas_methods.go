package elm // generated by gen/evas.go

//#include <Elementary.h>
import "C"
import (
  "unsafe"
)

func (self *Icon) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Scroller) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Entry) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *List) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Ctxpopup) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Dayselector) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *FileselectorButton) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *FileselectorEntry) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Fileselector) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Hoversel) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Multibuttonentry) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Naviframe) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Popup) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Actionslider) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Bg) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Box) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Bubble) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Button) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Calendar) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Check) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Clock) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Colorselector) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Conformant) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Datetime) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Diskselector) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Flip) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Flipselector) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Frame) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Gengrid) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Genlist) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *GestureLayer) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Glview) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Grid) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Hover) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Image) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Index) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *WinInwin) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Label) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Layout) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Map) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *MapTrack) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Mapbuf) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Menu) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Notify) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Panel) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Panes) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Photocam) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Photo) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Plug) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Progressbar) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Radio) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Route) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *SegmentControl) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Separator) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Slider) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Slideshow) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Spinner) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Table) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Thumb) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Toolbar) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Player) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Video) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Web) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Win) ClipSet(clip EvasObjectInterface) () {
  var _c_clip *C.Evas_Object
  if clip != nil { _c_clip = clip.GetObj() }
  C.evas_object_clip_set(self.obj, _c_clip)
}

func (self *Icon) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Scroller) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Entry) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *List) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Ctxpopup) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Dayselector) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *FileselectorButton) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *FileselectorEntry) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Fileselector) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Hoversel) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Multibuttonentry) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Naviframe) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Popup) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Actionslider) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Bg) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Box) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Bubble) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Button) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Calendar) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Check) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Clock) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Colorselector) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Conformant) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Datetime) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Diskselector) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Flip) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Flipselector) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Frame) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Gengrid) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Genlist) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *GestureLayer) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Glview) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Grid) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Hover) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Image) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Index) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *WinInwin) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Label) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Layout) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Map) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *MapTrack) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Mapbuf) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Menu) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Notify) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Panel) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Panes) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Photocam) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Photo) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Plug) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Progressbar) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Radio) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Route) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *SegmentControl) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Separator) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Slider) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Slideshow) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Spinner) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Table) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Thumb) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Toolbar) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Player) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Video) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Web) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Win) ClipUnset() () {
  C.evas_object_clip_unset(self.obj)
}

func (self *Icon) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Scroller) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Entry) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *List) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Ctxpopup) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Dayselector) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *FileselectorButton) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *FileselectorEntry) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Fileselector) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Hoversel) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Multibuttonentry) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Naviframe) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Popup) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Actionslider) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Bg) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Box) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Bubble) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Button) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Calendar) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Check) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Clock) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Colorselector) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Conformant) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Datetime) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Diskselector) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Flip) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Flipselector) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Frame) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Gengrid) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Genlist) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *GestureLayer) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Glview) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Grid) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Hover) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Image) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Index) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *WinInwin) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Label) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Layout) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Map) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *MapTrack) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Mapbuf) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Menu) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Notify) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Panel) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Panes) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Photocam) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Photo) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Plug) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Progressbar) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Radio) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Route) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *SegmentControl) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Separator) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Slider) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Slideshow) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Spinner) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Table) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Thumb) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Toolbar) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Player) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Video) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Web) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Win) FocusSet(focus bool) () {
  _c_focus := (C.Eina_Bool)(0)
  if focus { _c_focus = (C.Eina_Bool)(1) }
  C.evas_object_focus_set(self.obj, _c_focus)
}

func (self *Icon) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Scroller) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Entry) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *List) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Ctxpopup) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Dayselector) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *FileselectorButton) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *FileselectorEntry) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Fileselector) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Hoversel) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Multibuttonentry) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Naviframe) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Popup) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Actionslider) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Bg) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Box) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Bubble) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Button) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Calendar) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Check) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Clock) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Colorselector) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Conformant) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Datetime) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Diskselector) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Flip) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Flipselector) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Frame) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Gengrid) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Genlist) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *GestureLayer) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Glview) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Grid) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Hover) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Image) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Index) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *WinInwin) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Label) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Layout) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Map) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *MapTrack) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Mapbuf) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Menu) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Notify) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Panel) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Panes) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Photocam) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Photo) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Plug) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Progressbar) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Radio) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Route) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *SegmentControl) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Separator) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Slider) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Slideshow) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Spinner) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Table) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Thumb) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Toolbar) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Player) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Video) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Web) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Win) LayerSet(l int) () {
  _c_l := C.short(l)
  C.evas_object_layer_set(self.obj, _c_l)
}

func (self *Icon) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Scroller) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Entry) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *List) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Ctxpopup) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Dayselector) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *FileselectorButton) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *FileselectorEntry) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Fileselector) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Hoversel) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Multibuttonentry) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Naviframe) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Popup) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Actionslider) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Bg) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Box) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Bubble) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Button) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Calendar) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Check) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Clock) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Colorselector) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Conformant) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Datetime) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Diskselector) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Flip) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Flipselector) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Frame) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Gengrid) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Genlist) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *GestureLayer) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Glview) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Grid) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Hover) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Image) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Index) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *WinInwin) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Label) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Layout) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Map) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *MapTrack) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Mapbuf) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Menu) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Notify) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Panel) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Panes) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Photocam) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Photo) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Plug) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Progressbar) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Radio) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Route) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *SegmentControl) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Separator) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Slider) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Slideshow) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Spinner) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Table) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Thumb) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Toolbar) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Player) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Video) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Web) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Win) NameSet(name string) () {
  _c_name := C.CString(name)
  C.evas_object_name_set(self.obj, _c_name)
}

func (self *Icon) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Scroller) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Entry) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *List) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Ctxpopup) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Dayselector) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *FileselectorButton) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *FileselectorEntry) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Fileselector) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Hoversel) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Multibuttonentry) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Naviframe) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Popup) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Actionslider) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Bg) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Box) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Bubble) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Button) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Calendar) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Check) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Clock) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Colorselector) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Conformant) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Datetime) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Diskselector) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Flip) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Flipselector) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Frame) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Gengrid) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Genlist) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *GestureLayer) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Glview) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Grid) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Hover) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Image) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Index) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *WinInwin) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Label) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Layout) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Map) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *MapTrack) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Mapbuf) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Menu) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Notify) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Panel) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Panes) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Photocam) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Photo) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Plug) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Progressbar) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Radio) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Route) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *SegmentControl) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Separator) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Slider) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Slideshow) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Spinner) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Table) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Thumb) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Toolbar) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Player) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Video) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Web) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Win) Ref() () {
  C.evas_object_ref(self.obj)
}

func (self *Icon) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Scroller) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Entry) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *List) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Ctxpopup) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Dayselector) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *FileselectorButton) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *FileselectorEntry) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Fileselector) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Hoversel) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Multibuttonentry) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Naviframe) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Popup) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Actionslider) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Bg) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Box) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Bubble) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Button) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Calendar) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Check) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Clock) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Colorselector) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Conformant) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Datetime) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Diskselector) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Flip) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Flipselector) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Frame) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Gengrid) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Genlist) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *GestureLayer) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Glview) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Grid) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Hover) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Image) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Index) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *WinInwin) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Label) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Layout) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Map) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *MapTrack) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Mapbuf) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Menu) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Notify) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Panel) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Panes) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Photocam) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Photo) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Plug) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Progressbar) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Radio) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Route) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *SegmentControl) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Separator) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Slider) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Slideshow) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Spinner) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Table) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Thumb) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Toolbar) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Player) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Video) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Web) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Win) Unref() () {
  C.evas_object_unref(self.obj)
}

func (self *Icon) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Scroller) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Entry) Del() () {
  C.evas_object_del(self.obj)
}

func (self *List) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Ctxpopup) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Dayselector) Del() () {
  C.evas_object_del(self.obj)
}

func (self *FileselectorButton) Del() () {
  C.evas_object_del(self.obj)
}

func (self *FileselectorEntry) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Fileselector) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Hoversel) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Multibuttonentry) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Naviframe) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Popup) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Actionslider) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Bg) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Box) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Bubble) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Button) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Calendar) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Check) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Clock) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Colorselector) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Conformant) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Datetime) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Diskselector) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Flip) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Flipselector) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Frame) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Gengrid) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Genlist) Del() () {
  C.evas_object_del(self.obj)
}

func (self *GestureLayer) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Glview) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Grid) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Hover) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Image) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Index) Del() () {
  C.evas_object_del(self.obj)
}

func (self *WinInwin) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Label) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Layout) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Map) Del() () {
  C.evas_object_del(self.obj)
}

func (self *MapTrack) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Mapbuf) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Menu) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Notify) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Panel) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Panes) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Photocam) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Photo) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Plug) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Progressbar) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Radio) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Route) Del() () {
  C.evas_object_del(self.obj)
}

func (self *SegmentControl) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Separator) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Slider) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Slideshow) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Spinner) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Table) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Thumb) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Toolbar) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Player) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Video) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Web) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Win) Del() () {
  C.evas_object_del(self.obj)
}

func (self *Icon) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Scroller) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Entry) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *List) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Ctxpopup) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Dayselector) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *FileselectorButton) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *FileselectorEntry) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Fileselector) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Hoversel) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Multibuttonentry) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Naviframe) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Popup) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Actionslider) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Bg) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Box) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Bubble) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Button) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Calendar) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Check) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Clock) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Colorselector) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Conformant) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Datetime) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Diskselector) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Flip) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Flipselector) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Frame) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Gengrid) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Genlist) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *GestureLayer) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Glview) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Grid) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Hover) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Image) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Index) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *WinInwin) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Label) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Layout) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Map) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *MapTrack) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Mapbuf) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Menu) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Notify) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Panel) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Panes) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Photocam) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Photo) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Plug) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Progressbar) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Radio) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Route) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *SegmentControl) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Separator) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Slider) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Slideshow) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Spinner) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Table) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Thumb) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Toolbar) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Player) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Video) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Web) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Win) Move(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_move(self.obj, x, y)
}

func (self *Icon) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Scroller) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Entry) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *List) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Ctxpopup) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Dayselector) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *FileselectorButton) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *FileselectorEntry) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Fileselector) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Hoversel) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Multibuttonentry) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Naviframe) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Popup) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Actionslider) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Bg) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Box) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Bubble) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Button) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Calendar) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Check) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Clock) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Colorselector) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Conformant) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Datetime) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Diskselector) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Flip) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Flipselector) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Frame) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Gengrid) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Genlist) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *GestureLayer) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Glview) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Grid) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Hover) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Image) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Index) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *WinInwin) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Label) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Layout) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Map) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *MapTrack) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Mapbuf) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Menu) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Notify) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Panel) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Panes) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Photocam) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Photo) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Plug) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Progressbar) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Radio) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Route) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *SegmentControl) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Separator) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Slider) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Slideshow) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Spinner) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Table) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Thumb) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Toolbar) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Player) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Video) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Web) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Win) Resize(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_resize(self.obj, w, h)
}

func (self *Icon) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Scroller) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Entry) Show() () {
  C.evas_object_show(self.obj)
}

func (self *List) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Ctxpopup) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Dayselector) Show() () {
  C.evas_object_show(self.obj)
}

func (self *FileselectorButton) Show() () {
  C.evas_object_show(self.obj)
}

func (self *FileselectorEntry) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Fileselector) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Hoversel) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Multibuttonentry) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Naviframe) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Popup) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Actionslider) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Bg) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Box) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Bubble) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Button) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Calendar) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Check) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Clock) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Colorselector) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Conformant) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Datetime) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Diskselector) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Flip) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Flipselector) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Frame) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Gengrid) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Genlist) Show() () {
  C.evas_object_show(self.obj)
}

func (self *GestureLayer) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Glview) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Grid) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Hover) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Image) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Index) Show() () {
  C.evas_object_show(self.obj)
}

func (self *WinInwin) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Label) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Layout) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Map) Show() () {
  C.evas_object_show(self.obj)
}

func (self *MapTrack) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Mapbuf) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Menu) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Notify) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Panel) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Panes) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Photocam) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Photo) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Plug) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Progressbar) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Radio) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Route) Show() () {
  C.evas_object_show(self.obj)
}

func (self *SegmentControl) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Separator) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Slider) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Slideshow) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Spinner) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Table) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Thumb) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Toolbar) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Player) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Video) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Web) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Win) Show() () {
  C.evas_object_show(self.obj)
}

func (self *Icon) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Scroller) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Entry) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *List) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Ctxpopup) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Dayselector) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *FileselectorButton) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *FileselectorEntry) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Fileselector) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Hoversel) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Multibuttonentry) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Naviframe) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Popup) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Actionslider) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Bg) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Box) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Bubble) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Button) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Calendar) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Check) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Clock) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Colorselector) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Conformant) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Datetime) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Diskselector) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Flip) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Flipselector) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Frame) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Gengrid) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Genlist) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *GestureLayer) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Glview) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Grid) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Hover) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Image) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Index) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *WinInwin) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Label) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Layout) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Map) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *MapTrack) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Mapbuf) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Menu) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Notify) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Panel) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Panes) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Photocam) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Photo) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Plug) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Progressbar) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Radio) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Route) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *SegmentControl) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Separator) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Slider) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Slideshow) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Spinner) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Table) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Thumb) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Toolbar) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Player) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Video) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Web) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Win) Hide() () {
  C.evas_object_hide(self.obj)
}

func (self *Icon) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Scroller) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Entry) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *List) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Ctxpopup) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Dayselector) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorButton) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorEntry) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Fileselector) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hoversel) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Multibuttonentry) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Naviframe) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Popup) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Actionslider) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bg) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Box) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bubble) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Button) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Calendar) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Check) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Clock) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Colorselector) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Conformant) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Datetime) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Diskselector) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flip) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flipselector) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Frame) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Gengrid) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Genlist) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *GestureLayer) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Glview) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Grid) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hover) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Image) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Index) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *WinInwin) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Label) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Layout) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Map) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *MapTrack) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Mapbuf) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Menu) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Notify) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panel) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panes) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photocam) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photo) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Plug) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Progressbar) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Radio) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Route) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *SegmentControl) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Separator) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slider) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slideshow) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Spinner) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Table) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Thumb) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Toolbar) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Player) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Video) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Web) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Win) ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Icon) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Scroller) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Entry) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *List) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Ctxpopup) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Dayselector) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *FileselectorButton) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *FileselectorEntry) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Fileselector) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Hoversel) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Multibuttonentry) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Naviframe) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Popup) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Actionslider) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Bg) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Box) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Bubble) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Button) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Calendar) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Check) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Clock) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Colorselector) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Conformant) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Datetime) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Diskselector) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Flip) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Flipselector) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Frame) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Gengrid) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Genlist) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *GestureLayer) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Glview) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Grid) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Hover) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Image) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Index) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *WinInwin) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Label) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Layout) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Map) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *MapTrack) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Mapbuf) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Menu) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Notify) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Panel) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Panes) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Photocam) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Photo) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Plug) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Progressbar) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Radio) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Route) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *SegmentControl) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Separator) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Slider) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Slideshow) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Spinner) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Table) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Thumb) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Toolbar) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Player) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Video) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Web) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Win) Raise() () {
  C.evas_object_raise(self.obj)
}

func (self *Icon) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Scroller) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Entry) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *List) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Ctxpopup) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Dayselector) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *FileselectorButton) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *FileselectorEntry) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Fileselector) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Hoversel) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Multibuttonentry) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Naviframe) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Popup) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Actionslider) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Bg) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Box) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Bubble) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Button) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Calendar) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Check) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Clock) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Colorselector) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Conformant) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Datetime) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Diskselector) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Flip) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Flipselector) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Frame) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Gengrid) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Genlist) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *GestureLayer) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Glview) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Grid) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Hover) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Image) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Index) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *WinInwin) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Label) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Layout) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Map) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *MapTrack) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Mapbuf) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Menu) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Notify) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Panel) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Panes) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Photocam) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Photo) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Plug) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Progressbar) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Radio) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Route) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *SegmentControl) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Separator) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Slider) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Slideshow) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Spinner) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Table) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Thumb) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Toolbar) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Player) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Video) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Web) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Win) Lower() () {
  C.evas_object_lower(self.obj)
}

func (self *Icon) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Scroller) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Entry) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *List) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Ctxpopup) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Dayselector) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *FileselectorButton) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *FileselectorEntry) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Fileselector) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Hoversel) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Multibuttonentry) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Naviframe) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Popup) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Actionslider) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Bg) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Box) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Bubble) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Button) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Calendar) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Check) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Clock) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Colorselector) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Conformant) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Datetime) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Diskselector) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Flip) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Flipselector) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Frame) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Gengrid) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Genlist) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *GestureLayer) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Glview) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Grid) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Hover) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Image) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Index) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *WinInwin) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Label) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Layout) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Map) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *MapTrack) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Mapbuf) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Menu) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Notify) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Panel) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Panes) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Photocam) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Photo) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Plug) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Progressbar) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Radio) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Route) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *SegmentControl) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Separator) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Slider) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Slideshow) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Spinner) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Table) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Thumb) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Toolbar) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Player) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Video) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Web) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Win) StackAbove(above EvasObjectInterface) () {
  var _c_above *C.Evas_Object
  if above != nil { _c_above = above.GetObj() }
  C.evas_object_stack_above(self.obj, _c_above)
}

func (self *Icon) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Scroller) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Entry) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *List) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Ctxpopup) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Dayselector) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *FileselectorButton) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *FileselectorEntry) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Fileselector) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Hoversel) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Multibuttonentry) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Naviframe) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Popup) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Actionslider) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Bg) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Box) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Bubble) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Button) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Calendar) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Check) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Clock) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Colorselector) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Conformant) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Datetime) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Diskselector) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Flip) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Flipselector) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Frame) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Gengrid) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Genlist) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *GestureLayer) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Glview) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Grid) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Hover) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Image) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Index) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *WinInwin) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Label) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Layout) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Map) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *MapTrack) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Mapbuf) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Menu) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Notify) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Panel) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Panes) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Photocam) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Photo) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Plug) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Progressbar) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Radio) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Route) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *SegmentControl) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Separator) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Slider) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Slideshow) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Spinner) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Table) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Thumb) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Toolbar) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Player) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Video) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Web) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Win) StackBelow(below EvasObjectInterface) () {
  var _c_below *C.Evas_Object
  if below != nil { _c_below = below.GetObj() }
  C.evas_object_stack_below(self.obj, _c_below)
}

func (self *Icon) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Scroller) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Entry) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *List) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Ctxpopup) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Dayselector) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *FileselectorButton) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *FileselectorEntry) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Fileselector) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Hoversel) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Multibuttonentry) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Naviframe) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Popup) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Actionslider) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Bg) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Box) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Bubble) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Button) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Calendar) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Check) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Clock) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Colorselector) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Conformant) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Datetime) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Diskselector) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Flip) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Flipselector) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Frame) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Gengrid) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Genlist) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *GestureLayer) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Glview) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Grid) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Hover) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Image) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Index) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *WinInwin) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Label) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Layout) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Map) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *MapTrack) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Mapbuf) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Menu) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Notify) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Panel) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Panes) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Photocam) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Photo) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Plug) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Progressbar) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Radio) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Route) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *SegmentControl) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Separator) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Slider) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Slideshow) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Spinner) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Table) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Thumb) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Toolbar) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Player) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Video) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Web) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Win) PassEventsSet(pass bool) () {
  _c_pass := (C.Eina_Bool)(0)
  if pass { _c_pass = (C.Eina_Bool)(1) }
  C.evas_object_pass_events_set(self.obj, _c_pass)
}

func (self *Icon) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Scroller) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Entry) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *List) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Ctxpopup) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Dayselector) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *FileselectorButton) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *FileselectorEntry) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Fileselector) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Hoversel) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Multibuttonentry) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Naviframe) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Popup) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Actionslider) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Bg) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Box) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Bubble) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Button) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Calendar) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Check) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Clock) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Colorselector) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Conformant) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Datetime) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Diskselector) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Flip) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Flipselector) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Frame) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Gengrid) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Genlist) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *GestureLayer) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Glview) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Grid) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Hover) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Image) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Index) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *WinInwin) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Label) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Layout) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Map) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *MapTrack) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Mapbuf) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Menu) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Notify) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Panel) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Panes) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Photocam) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Photo) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Plug) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Progressbar) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Radio) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Route) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *SegmentControl) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Separator) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Slider) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Slideshow) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Spinner) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Table) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Thumb) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Toolbar) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Player) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Video) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Web) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Win) RepeatEventsSet(repeat bool) () {
  _c_repeat := (C.Eina_Bool)(0)
  if repeat { _c_repeat = (C.Eina_Bool)(1) }
  C.evas_object_repeat_events_set(self.obj, _c_repeat)
}

func (self *Icon) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Scroller) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Entry) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *List) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Ctxpopup) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Dayselector) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *FileselectorButton) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *FileselectorEntry) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Fileselector) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Hoversel) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Multibuttonentry) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Naviframe) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Popup) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Actionslider) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Bg) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Box) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Bubble) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Button) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Calendar) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Check) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Clock) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Colorselector) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Conformant) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Datetime) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Diskselector) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Flip) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Flipselector) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Frame) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Gengrid) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Genlist) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *GestureLayer) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Glview) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Grid) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Hover) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Image) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Index) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *WinInwin) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Label) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Layout) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Map) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *MapTrack) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Mapbuf) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Menu) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Notify) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Panel) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Panes) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Photocam) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Photo) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Plug) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Progressbar) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Radio) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Route) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *SegmentControl) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Separator) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Slider) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Slideshow) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Spinner) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Table) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Thumb) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Toolbar) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Player) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Video) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Web) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Win) PropagateEventsSet(prop bool) () {
  _c_prop := (C.Eina_Bool)(0)
  if prop { _c_prop = (C.Eina_Bool)(1) }
  C.evas_object_propagate_events_set(self.obj, _c_prop)
}

func (self *Icon) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Scroller) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Entry) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *List) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Ctxpopup) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Dayselector) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *FileselectorButton) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *FileselectorEntry) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Fileselector) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Hoversel) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Multibuttonentry) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Naviframe) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Popup) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Actionslider) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Bg) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Box) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Bubble) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Button) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Calendar) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Check) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Clock) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Colorselector) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Conformant) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Datetime) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Diskselector) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Flip) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Flipselector) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Frame) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Gengrid) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Genlist) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *GestureLayer) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Glview) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Grid) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Hover) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Image) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Index) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *WinInwin) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Label) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Layout) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Map) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *MapTrack) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Mapbuf) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Menu) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Notify) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Panel) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Panes) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Photocam) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Photo) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Plug) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Progressbar) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Radio) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Route) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *SegmentControl) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Separator) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Slider) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Slideshow) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Spinner) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Table) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Thumb) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Toolbar) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Player) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Video) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Web) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Win) FreezeEventsSet(freeze bool) () {
  _c_freeze := (C.Eina_Bool)(0)
  if freeze { _c_freeze = (C.Eina_Bool)(1) }
  C.evas_object_freeze_events_set(self.obj, _c_freeze)
}

func (self *Icon) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Scroller) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Entry) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *List) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Ctxpopup) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Dayselector) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *FileselectorButton) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *FileselectorEntry) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Fileselector) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Hoversel) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Multibuttonentry) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Naviframe) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Popup) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Actionslider) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Bg) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Box) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Bubble) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Button) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Calendar) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Check) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Clock) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Colorselector) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Conformant) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Datetime) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Diskselector) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Flip) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Flipselector) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Frame) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Gengrid) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Genlist) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *GestureLayer) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Glview) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Grid) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Hover) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Image) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Index) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *WinInwin) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Label) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Layout) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Map) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *MapTrack) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Mapbuf) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Menu) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Notify) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Panel) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Panes) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Photocam) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Photo) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Plug) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Progressbar) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Radio) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Route) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *SegmentControl) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Separator) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Slider) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Slideshow) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Spinner) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Table) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Thumb) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Toolbar) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Player) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Video) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Web) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Win) MapEnableSet(enabled bool) () {
  _c_enabled := (C.Eina_Bool)(0)
  if enabled { _c_enabled = (C.Eina_Bool)(1) }
  C.evas_object_map_enable_set(self.obj, _c_enabled)
}

func (self *Icon) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Scroller) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Entry) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *List) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Ctxpopup) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Dayselector) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *FileselectorButton) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *FileselectorEntry) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Fileselector) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Hoversel) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Multibuttonentry) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Naviframe) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Popup) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Actionslider) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Bg) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Box) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Bubble) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Button) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Calendar) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Check) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Clock) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Colorselector) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Conformant) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Datetime) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Diskselector) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Flip) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Flipselector) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Frame) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Gengrid) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Genlist) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *GestureLayer) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Glview) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Grid) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Hover) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Image) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Index) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *WinInwin) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Label) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Layout) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Map) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *MapTrack) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Mapbuf) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Menu) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Notify) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Panel) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Panes) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Photocam) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Photo) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Plug) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Progressbar) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Radio) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Route) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *SegmentControl) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Separator) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Slider) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Slideshow) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Spinner) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Table) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Thumb) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Toolbar) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Player) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Video) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Web) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Win) MapSet(map_ *C.Evas_Map) () {
  C.evas_object_map_set(self.obj, map_)
}

func (self *Icon) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Scroller) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Entry) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *List) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Ctxpopup) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Dayselector) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *FileselectorButton) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *FileselectorEntry) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Fileselector) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Hoversel) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Multibuttonentry) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Naviframe) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Popup) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Actionslider) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Bg) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Box) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Bubble) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Button) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Calendar) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Check) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Clock) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Colorselector) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Conformant) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Datetime) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Diskselector) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Flip) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Flipselector) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Frame) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Gengrid) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Genlist) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *GestureLayer) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Glview) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Grid) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Hover) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Image) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Index) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *WinInwin) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Label) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Layout) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Map) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *MapTrack) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Mapbuf) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Menu) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Notify) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Panel) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Panes) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Photocam) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Photo) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Plug) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Progressbar) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Radio) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Route) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *SegmentControl) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Separator) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Slider) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Slideshow) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Spinner) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Table) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Thumb) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Toolbar) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Player) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Video) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Web) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Win) SizeHintMinSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_min_set(self.obj, w, h)
}

func (self *Icon) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Scroller) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Entry) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *List) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Ctxpopup) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Dayselector) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *FileselectorButton) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *FileselectorEntry) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Fileselector) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Hoversel) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Multibuttonentry) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Naviframe) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Popup) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Actionslider) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Bg) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Box) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Bubble) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Button) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Calendar) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Check) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Clock) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Colorselector) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Conformant) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Datetime) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Diskselector) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Flip) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Flipselector) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Frame) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Gengrid) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Genlist) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *GestureLayer) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Glview) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Grid) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Hover) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Image) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Index) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *WinInwin) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Label) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Layout) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Map) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *MapTrack) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Mapbuf) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Menu) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Notify) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Panel) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Panes) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Photocam) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Photo) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Plug) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Progressbar) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Radio) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Route) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *SegmentControl) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Separator) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Slider) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Slideshow) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Spinner) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Table) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Thumb) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Toolbar) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Player) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Video) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Web) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Win) SizeHintMaxSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_max_set(self.obj, w, h)
}

func (self *Icon) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Scroller) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Entry) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *List) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Ctxpopup) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Dayselector) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *FileselectorButton) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *FileselectorEntry) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Fileselector) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Hoversel) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Multibuttonentry) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Naviframe) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Popup) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Actionslider) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Bg) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Box) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Bubble) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Button) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Calendar) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Check) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Clock) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Colorselector) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Conformant) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Datetime) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Diskselector) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Flip) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Flipselector) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Frame) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Gengrid) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Genlist) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *GestureLayer) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Glview) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Grid) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Hover) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Image) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Index) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *WinInwin) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Label) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Layout) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Map) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *MapTrack) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Mapbuf) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Menu) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Notify) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Panel) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Panes) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Photocam) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Photo) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Plug) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Progressbar) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Radio) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Route) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *SegmentControl) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Separator) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Slider) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Slideshow) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Spinner) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Table) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Thumb) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Toolbar) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Player) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Video) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Web) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Win) SizeHintRequestSet(w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_request_set(self.obj, w, h)
}

func (self *Icon) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Scroller) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Entry) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *List) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Ctxpopup) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Dayselector) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *FileselectorButton) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *FileselectorEntry) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Fileselector) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Hoversel) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Multibuttonentry) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Naviframe) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Popup) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Actionslider) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Bg) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Box) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Bubble) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Button) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Calendar) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Check) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Clock) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Colorselector) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Conformant) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Datetime) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Diskselector) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Flip) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Flipselector) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Frame) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Gengrid) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Genlist) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *GestureLayer) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Glview) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Grid) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Hover) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Image) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Index) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *WinInwin) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Label) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Layout) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Map) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *MapTrack) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Mapbuf) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Menu) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Notify) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Panel) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Panes) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Photocam) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Photo) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Plug) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Progressbar) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Radio) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Route) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *SegmentControl) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Separator) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Slider) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Slideshow) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Spinner) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Table) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Thumb) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Toolbar) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Player) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Video) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Web) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Win) SizeHintAspectSet(aspect C.Evas_Aspect_Control, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_size_hint_aspect_set(self.obj, aspect, w, h)
}

func (self *Icon) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Scroller) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Entry) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *List) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Ctxpopup) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Dayselector) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *FileselectorButton) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *FileselectorEntry) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Fileselector) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Hoversel) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Multibuttonentry) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Naviframe) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Popup) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Actionslider) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Bg) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Box) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Bubble) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Button) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Calendar) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Check) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Clock) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Colorselector) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Conformant) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Datetime) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Diskselector) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Flip) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Flipselector) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Frame) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Gengrid) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Genlist) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *GestureLayer) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Glview) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Grid) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Hover) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Image) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Index) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *WinInwin) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Label) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Layout) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Map) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *MapTrack) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Mapbuf) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Menu) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Notify) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Panel) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Panes) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Photocam) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Photo) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Plug) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Progressbar) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Radio) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Route) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *SegmentControl) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Separator) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Slider) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Slideshow) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Spinner) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Table) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Thumb) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Toolbar) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Player) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Video) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Web) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Win) SizeHintAlignSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_align_set(self.obj, _c_x, _c_y)
}

func (self *Icon) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Scroller) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Entry) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *List) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Ctxpopup) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Dayselector) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *FileselectorButton) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *FileselectorEntry) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Fileselector) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Hoversel) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Multibuttonentry) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Naviframe) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Popup) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Actionslider) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Bg) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Box) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Bubble) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Button) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Calendar) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Check) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Clock) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Colorselector) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Conformant) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Datetime) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Diskselector) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Flip) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Flipselector) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Frame) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Gengrid) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Genlist) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *GestureLayer) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Glview) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Grid) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Hover) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Image) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Index) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *WinInwin) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Label) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Layout) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Map) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *MapTrack) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Mapbuf) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Menu) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Notify) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Panel) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Panes) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Photocam) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Photo) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Plug) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Progressbar) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Radio) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Route) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *SegmentControl) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Separator) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Slider) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Slideshow) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Spinner) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Table) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Thumb) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Toolbar) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Player) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Video) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Web) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Win) SizeHintWeightSet(x float64, y float64) () {
  _c_x := C.double(x)
  _c_y := C.double(y)
  C.evas_object_size_hint_weight_set(self.obj, _c_x, _c_y)
}

func (self *Icon) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Scroller) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Entry) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *List) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Ctxpopup) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Dayselector) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *FileselectorButton) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *FileselectorEntry) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Fileselector) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Hoversel) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Multibuttonentry) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Naviframe) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Popup) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Actionslider) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Bg) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Box) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Bubble) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Button) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Calendar) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Check) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Clock) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Colorselector) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Conformant) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Datetime) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Diskselector) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Flip) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Flipselector) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Frame) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Gengrid) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Genlist) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *GestureLayer) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Glview) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Grid) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Hover) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Image) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Index) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *WinInwin) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Label) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Layout) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Map) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *MapTrack) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Mapbuf) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Menu) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Notify) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Panel) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Panes) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Photocam) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Photo) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Plug) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Progressbar) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Radio) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Route) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *SegmentControl) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Separator) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Slider) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Slideshow) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Spinner) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Table) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Thumb) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Toolbar) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Player) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Video) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Web) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Win) SizeHintPaddingSet(l C.Evas_Coord, r C.Evas_Coord, t C.Evas_Coord, b C.Evas_Coord) () {
  C.evas_object_size_hint_padding_set(self.obj, l, r, t, b)
}

func (self *Icon) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Scroller) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Entry) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *List) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Ctxpopup) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Dayselector) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *FileselectorButton) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *FileselectorEntry) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Fileselector) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Hoversel) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Multibuttonentry) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Naviframe) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Popup) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Actionslider) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Bg) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Box) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Bubble) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Button) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Calendar) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Check) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Clock) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Colorselector) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Conformant) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Datetime) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Diskselector) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Flip) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Flipselector) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Frame) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Gengrid) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Genlist) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *GestureLayer) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Glview) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Grid) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Hover) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Image) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Index) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *WinInwin) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Label) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Layout) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Map) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *MapTrack) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Mapbuf) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Menu) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Notify) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Panel) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Panes) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Photocam) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Photo) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Plug) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Progressbar) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Radio) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Route) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *SegmentControl) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Separator) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Slider) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Slideshow) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Spinner) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Table) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Thumb) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Toolbar) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Player) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Video) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Web) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Win) DataSet(key string, data unsafe.Pointer) () {
  _c_key := C.CString(key)
  C.evas_object_data_set(self.obj, _c_key, data)
}

func (self *Icon) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Scroller) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Entry) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *List) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Ctxpopup) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Dayselector) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *FileselectorButton) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *FileselectorEntry) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Fileselector) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Hoversel) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Multibuttonentry) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Naviframe) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Popup) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Actionslider) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Bg) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Box) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Bubble) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Button) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Calendar) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Check) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Clock) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Colorselector) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Conformant) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Datetime) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Diskselector) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Flip) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Flipselector) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Frame) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Gengrid) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Genlist) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *GestureLayer) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Glview) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Grid) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Hover) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Image) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Index) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *WinInwin) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Label) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Layout) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Map) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *MapTrack) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Mapbuf) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Menu) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Notify) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Panel) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Panes) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Photocam) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Photo) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Plug) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Progressbar) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Radio) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Route) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *SegmentControl) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Separator) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Slider) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Slideshow) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Spinner) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Table) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Thumb) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Toolbar) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Player) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Video) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Web) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Win) DataDel(key string) (unsafe.Pointer) {
  _c_key := C.CString(key)
  _cgo_return_ := C.evas_object_data_del(self.obj, _c_key)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Icon) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Scroller) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Entry) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *List) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Ctxpopup) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Dayselector) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *FileselectorButton) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *FileselectorEntry) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Fileselector) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Hoversel) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Multibuttonentry) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Naviframe) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Popup) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Actionslider) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Bg) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Box) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Bubble) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Button) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Calendar) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Check) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Clock) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Colorselector) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Conformant) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Datetime) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Diskselector) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Flip) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Flipselector) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Frame) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Gengrid) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Genlist) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *GestureLayer) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Glview) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Grid) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Hover) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Image) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Index) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *WinInwin) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Label) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Layout) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Map) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *MapTrack) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Mapbuf) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Menu) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Notify) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Panel) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Panes) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Photocam) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Photo) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Plug) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Progressbar) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Radio) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Route) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *SegmentControl) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Separator) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Slider) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Slideshow) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Spinner) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Table) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Thumb) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Toolbar) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Player) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Video) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Web) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Win) PointerModeSet(setting C.Evas_Object_Pointer_Mode) () {
  C.evas_object_pointer_mode_set(self.obj, setting)
}

func (self *Icon) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Scroller) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Entry) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *List) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Ctxpopup) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Dayselector) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *FileselectorButton) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *FileselectorEntry) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Fileselector) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Hoversel) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Multibuttonentry) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Naviframe) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Popup) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Actionslider) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Bg) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Box) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Bubble) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Button) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Calendar) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Check) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Clock) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Colorselector) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Conformant) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Datetime) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Diskselector) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Flip) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Flipselector) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Frame) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Gengrid) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Genlist) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *GestureLayer) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Glview) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Grid) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Hover) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Image) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Index) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *WinInwin) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Label) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Layout) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Map) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *MapTrack) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Mapbuf) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Menu) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Notify) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Panel) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Panes) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Photocam) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Photo) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Plug) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Progressbar) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Radio) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Route) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *SegmentControl) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Separator) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Slider) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Slideshow) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Spinner) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Table) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Thumb) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Toolbar) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Player) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Video) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Web) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Win) AntiAliasSet(antialias bool) () {
  _c_antialias := (C.Eina_Bool)(0)
  if antialias { _c_antialias = (C.Eina_Bool)(1) }
  C.evas_object_anti_alias_set(self.obj, _c_antialias)
}

func (self *Icon) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Scroller) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Entry) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *List) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Ctxpopup) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Dayselector) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *FileselectorButton) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *FileselectorEntry) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Fileselector) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Hoversel) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Multibuttonentry) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Naviframe) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Popup) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Actionslider) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Bg) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Box) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Bubble) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Button) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Calendar) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Check) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Clock) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Colorselector) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Conformant) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Datetime) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Diskselector) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Flip) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Flipselector) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Frame) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Gengrid) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Genlist) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *GestureLayer) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Glview) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Grid) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Hover) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Image) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Index) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *WinInwin) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Label) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Layout) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Map) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *MapTrack) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Mapbuf) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Menu) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Notify) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Panel) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Panes) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Photocam) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Photo) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Plug) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Progressbar) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Radio) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Route) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *SegmentControl) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Separator) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Slider) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Slideshow) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Spinner) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Table) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Thumb) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Toolbar) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Player) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Video) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Web) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Win) ScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_scale_set(self.obj, _c_scale)
}

func (self *Icon) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Scroller) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Entry) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *List) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Ctxpopup) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Dayselector) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *FileselectorButton) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *FileselectorEntry) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Fileselector) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Hoversel) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Multibuttonentry) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Naviframe) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Popup) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Actionslider) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Bg) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Box) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Bubble) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Button) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Calendar) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Check) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Clock) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Colorselector) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Conformant) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Datetime) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Diskselector) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Flip) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Flipselector) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Frame) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Gengrid) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Genlist) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *GestureLayer) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Glview) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Grid) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Hover) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Image) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Index) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *WinInwin) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Label) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Layout) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Map) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *MapTrack) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Mapbuf) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Menu) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Notify) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Panel) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Panes) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Photocam) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Photo) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Plug) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Progressbar) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Radio) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Route) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *SegmentControl) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Separator) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Slider) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Slideshow) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Spinner) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Table) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Thumb) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Toolbar) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Player) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Video) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Web) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Win) RenderOpSet(op C.Evas_Render_Op) () {
  C.evas_object_render_op_set(self.obj, op)
}

func (self *Icon) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Scroller) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Entry) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *List) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Ctxpopup) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Dayselector) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *FileselectorButton) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *FileselectorEntry) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Fileselector) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Hoversel) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Multibuttonentry) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Naviframe) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Popup) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Actionslider) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Bg) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Box) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Bubble) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Button) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Calendar) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Check) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Clock) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Colorselector) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Conformant) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Datetime) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Diskselector) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Flip) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Flipselector) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Frame) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Gengrid) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Genlist) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *GestureLayer) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Glview) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Grid) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Hover) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Image) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Index) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *WinInwin) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Label) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Layout) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Map) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *MapTrack) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Mapbuf) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Menu) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Notify) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Panel) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Panes) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Photocam) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Photo) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Plug) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Progressbar) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Radio) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Route) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *SegmentControl) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Separator) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Slider) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Slideshow) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Spinner) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Table) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Thumb) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Toolbar) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Player) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Video) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Web) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Win) PreciseIsInsideSet(precise bool) () {
  _c_precise := (C.Eina_Bool)(0)
  if precise { _c_precise = (C.Eina_Bool)(1) }
  C.evas_object_precise_is_inside_set(self.obj, _c_precise)
}

func (self *Icon) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Scroller) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Entry) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *List) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Ctxpopup) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Dayselector) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *FileselectorButton) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *FileselectorEntry) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Fileselector) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Hoversel) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Multibuttonentry) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Naviframe) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Popup) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Actionslider) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Bg) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Box) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Bubble) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Button) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Calendar) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Check) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Clock) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Colorselector) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Conformant) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Datetime) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Diskselector) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Flip) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Flipselector) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Frame) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Gengrid) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Genlist) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *GestureLayer) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Glview) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Grid) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Hover) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Image) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Index) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *WinInwin) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Label) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Layout) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Map) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *MapTrack) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Mapbuf) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Menu) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Notify) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Panel) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Panes) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Photocam) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Photo) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Plug) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Progressbar) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Radio) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Route) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *SegmentControl) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Separator) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Slider) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Slideshow) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Spinner) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Table) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Thumb) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Toolbar) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Player) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Video) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Web) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Win) StaticClipSet(is_static_clip bool) () {
  _c_is_static_clip := (C.Eina_Bool)(0)
  if is_static_clip { _c_is_static_clip = (C.Eina_Bool)(1) }
  C.evas_object_static_clip_set(self.obj, _c_is_static_clip)
}

func (self *Icon) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Scroller) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Entry) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *List) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Ctxpopup) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Dayselector) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *FileselectorButton) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *FileselectorEntry) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Fileselector) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Hoversel) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Multibuttonentry) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Naviframe) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Popup) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Actionslider) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Bg) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Box) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Bubble) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Button) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Calendar) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Check) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Clock) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Colorselector) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Conformant) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Datetime) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Diskselector) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Flip) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Flipselector) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Frame) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Gengrid) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Genlist) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *GestureLayer) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Glview) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Grid) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Hover) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Image) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Index) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *WinInwin) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Label) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Layout) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Map) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *MapTrack) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Mapbuf) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Menu) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Notify) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Panel) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Panes) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Photocam) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Photo) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Plug) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Progressbar) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Radio) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Route) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *SegmentControl) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Separator) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Slider) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Slideshow) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Spinner) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Table) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Thumb) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Toolbar) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Player) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Video) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Web) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Win) ImageMemfileSet(data unsafe.Pointer, size int, format string, key string) () {
  _c_size := C.int(size)
  _c_format := C.CString(format)
  defer C.free(unsafe.Pointer(_c_format))
  _c_key := C.CString(key)
  defer C.free(unsafe.Pointer(_c_key))
  C.evas_object_image_memfile_set(self.obj, data, _c_size, _c_format, _c_key)
}

func (self *Icon) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Scroller) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Entry) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *List) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Ctxpopup) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Dayselector) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *FileselectorButton) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *FileselectorEntry) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Fileselector) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Hoversel) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Multibuttonentry) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Naviframe) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Popup) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Actionslider) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Bg) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Box) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Bubble) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Button) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Calendar) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Check) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Clock) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Colorselector) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Conformant) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Datetime) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Diskselector) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Flip) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Flipselector) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Frame) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Gengrid) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Genlist) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *GestureLayer) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Glview) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Grid) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Hover) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Image) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Index) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *WinInwin) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Label) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Layout) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Map) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *MapTrack) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Mapbuf) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Menu) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Notify) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Panel) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Panes) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Photocam) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Photo) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Plug) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Progressbar) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Radio) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Route) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *SegmentControl) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Separator) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Slider) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Slideshow) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Spinner) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Table) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Thumb) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Toolbar) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Player) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Video) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Web) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Win) ImageFileSet(file string, key string) () {
  _c_file := C.CString(file)
  _c_key := C.CString(key)
  C.evas_object_image_file_set(self.obj, _c_file, _c_key)
}

func (self *Icon) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Scroller) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Entry) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *List) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Ctxpopup) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Dayselector) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *FileselectorButton) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *FileselectorEntry) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Fileselector) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Hoversel) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Multibuttonentry) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Naviframe) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Popup) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Actionslider) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Bg) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Box) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Bubble) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Button) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Calendar) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Check) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Clock) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Colorselector) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Conformant) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Datetime) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Diskselector) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Flip) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Flipselector) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Frame) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Gengrid) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Genlist) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *GestureLayer) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Glview) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Grid) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Hover) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Image) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Index) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *WinInwin) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Label) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Layout) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Map) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *MapTrack) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Mapbuf) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Menu) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Notify) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Panel) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Panes) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Photocam) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Photo) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Plug) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Progressbar) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Radio) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Route) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *SegmentControl) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Separator) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Slider) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Slideshow) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Spinner) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Table) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Thumb) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Toolbar) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Player) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Video) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Web) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Win) ImageBorderSet(l int, r int, t int, b int) () {
  _c_l := C.int(l)
  _c_r := C.int(r)
  _c_t := C.int(t)
  _c_b := C.int(b)
  C.evas_object_image_border_set(self.obj, _c_l, _c_r, _c_t, _c_b)
}

func (self *Icon) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Scroller) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Entry) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *List) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Ctxpopup) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Dayselector) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *FileselectorButton) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *FileselectorEntry) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Fileselector) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Hoversel) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Multibuttonentry) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Naviframe) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Popup) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Actionslider) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Bg) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Box) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Bubble) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Button) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Calendar) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Check) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Clock) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Colorselector) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Conformant) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Datetime) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Diskselector) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Flip) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Flipselector) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Frame) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Gengrid) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Genlist) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *GestureLayer) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Glview) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Grid) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Hover) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Image) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Index) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *WinInwin) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Label) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Layout) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Map) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *MapTrack) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Mapbuf) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Menu) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Notify) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Panel) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Panes) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Photocam) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Photo) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Plug) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Progressbar) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Radio) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Route) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *SegmentControl) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Separator) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Slider) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Slideshow) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Spinner) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Table) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Thumb) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Toolbar) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Player) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Video) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Web) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Win) ImageBorderCenterFillSet(fill C.Evas_Border_Fill_Mode) () {
  C.evas_object_image_border_center_fill_set(self.obj, fill)
}

func (self *Icon) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Scroller) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Entry) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *List) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Ctxpopup) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Dayselector) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *FileselectorButton) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *FileselectorEntry) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Fileselector) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Hoversel) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Multibuttonentry) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Naviframe) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Popup) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Actionslider) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Bg) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Box) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Bubble) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Button) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Calendar) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Check) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Clock) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Colorselector) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Conformant) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Datetime) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Diskselector) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Flip) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Flipselector) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Frame) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Gengrid) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Genlist) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *GestureLayer) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Glview) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Grid) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Hover) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Image) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Index) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *WinInwin) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Label) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Layout) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Map) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *MapTrack) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Mapbuf) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Menu) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Notify) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Panel) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Panes) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Photocam) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Photo) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Plug) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Progressbar) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Radio) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Route) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *SegmentControl) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Separator) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Slider) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Slideshow) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Spinner) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Table) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Thumb) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Toolbar) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Player) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Video) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Web) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Win) ImageFilledSet(setting bool) () {
  _c_setting := (C.Eina_Bool)(0)
  if setting { _c_setting = (C.Eina_Bool)(1) }
  C.evas_object_image_filled_set(self.obj, _c_setting)
}

func (self *Icon) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Scroller) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Entry) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *List) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Ctxpopup) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Dayselector) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *FileselectorButton) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *FileselectorEntry) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Fileselector) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Hoversel) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Multibuttonentry) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Naviframe) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Popup) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Actionslider) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Bg) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Box) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Bubble) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Button) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Calendar) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Check) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Clock) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Colorselector) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Conformant) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Datetime) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Diskselector) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Flip) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Flipselector) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Frame) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Gengrid) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Genlist) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *GestureLayer) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Glview) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Grid) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Hover) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Image) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Index) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *WinInwin) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Label) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Layout) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Map) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *MapTrack) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Mapbuf) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Menu) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Notify) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Panel) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Panes) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Photocam) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Photo) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Plug) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Progressbar) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Radio) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Route) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *SegmentControl) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Separator) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Slider) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Slideshow) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Spinner) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Table) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Thumb) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Toolbar) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Player) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Video) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Web) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Win) ImageBorderScaleSet(scale float64) () {
  _c_scale := C.double(scale)
  C.evas_object_image_border_scale_set(self.obj, _c_scale)
}

func (self *Icon) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Scroller) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Entry) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *List) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Ctxpopup) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Dayselector) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *FileselectorButton) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *FileselectorEntry) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Fileselector) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Hoversel) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Multibuttonentry) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Naviframe) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Popup) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Actionslider) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Bg) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Box) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Bubble) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Button) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Calendar) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Check) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Clock) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Colorselector) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Conformant) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Datetime) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Diskselector) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Flip) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Flipselector) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Frame) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Gengrid) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Genlist) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *GestureLayer) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Glview) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Grid) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Hover) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Image) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Index) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *WinInwin) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Label) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Layout) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Map) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *MapTrack) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Mapbuf) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Menu) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Notify) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Panel) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Panes) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Photocam) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Photo) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Plug) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Progressbar) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Radio) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Route) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *SegmentControl) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Separator) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Slider) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Slideshow) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Spinner) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Table) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Thumb) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Toolbar) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Player) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Video) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Web) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Win) ImageFillSet(x C.Evas_Coord, y C.Evas_Coord, w C.Evas_Coord, h C.Evas_Coord) () {
  C.evas_object_image_fill_set(self.obj, x, y, w, h)
}

func (self *Icon) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Scroller) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Entry) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *List) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Ctxpopup) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Dayselector) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *FileselectorButton) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *FileselectorEntry) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Fileselector) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Hoversel) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Multibuttonentry) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Naviframe) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Popup) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Actionslider) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Bg) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Box) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Bubble) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Button) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Calendar) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Check) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Clock) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Colorselector) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Conformant) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Datetime) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Diskselector) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Flip) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Flipselector) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Frame) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Gengrid) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Genlist) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *GestureLayer) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Glview) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Grid) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Hover) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Image) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Index) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *WinInwin) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Label) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Layout) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Map) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *MapTrack) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Mapbuf) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Menu) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Notify) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Panel) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Panes) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Photocam) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Photo) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Plug) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Progressbar) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Radio) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Route) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *SegmentControl) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Separator) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Slider) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Slideshow) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Spinner) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Table) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Thumb) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Toolbar) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Player) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Video) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Web) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Win) ImageFillSpreadSet(spread C.Evas_Fill_Spread) () {
  C.evas_object_image_fill_spread_set(self.obj, spread)
}

func (self *Icon) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Scroller) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Entry) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *List) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Ctxpopup) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Dayselector) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorButton) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorEntry) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Fileselector) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Hoversel) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Multibuttonentry) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Naviframe) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Popup) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Actionslider) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Bg) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Box) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Bubble) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Button) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Calendar) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Check) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Clock) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Colorselector) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Conformant) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Datetime) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Diskselector) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Flip) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Flipselector) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Frame) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Gengrid) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Genlist) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *GestureLayer) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Glview) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Grid) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Hover) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Image) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Index) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *WinInwin) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Label) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Layout) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Map) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *MapTrack) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Mapbuf) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Menu) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Notify) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Panel) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Panes) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Photocam) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Photo) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Plug) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Progressbar) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Radio) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Route) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *SegmentControl) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Separator) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Slider) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Slideshow) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Spinner) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Table) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Thumb) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Toolbar) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Player) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Video) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Web) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Win) ImageSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_size_set(self.obj, _c_w, _c_h)
}

func (self *Icon) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Scroller) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Entry) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *List) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Ctxpopup) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Dayselector) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *FileselectorButton) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *FileselectorEntry) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Fileselector) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Hoversel) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Multibuttonentry) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Naviframe) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Popup) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Actionslider) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Bg) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Box) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Bubble) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Button) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Calendar) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Check) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Clock) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Colorselector) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Conformant) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Datetime) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Diskselector) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Flip) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Flipselector) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Frame) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Gengrid) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Genlist) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *GestureLayer) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Glview) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Grid) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Hover) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Image) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Index) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *WinInwin) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Label) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Layout) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Map) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *MapTrack) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Mapbuf) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Menu) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Notify) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Panel) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Panes) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Photocam) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Photo) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Plug) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Progressbar) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Radio) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Route) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *SegmentControl) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Separator) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Slider) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Slideshow) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Spinner) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Table) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Thumb) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Toolbar) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Player) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Video) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Web) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Win) ImageDataSet(data unsafe.Pointer) () {
  C.evas_object_image_data_set(self.obj, data)
}

func (self *Icon) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Scroller) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Entry) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *List) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Ctxpopup) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Dayselector) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *FileselectorButton) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *FileselectorEntry) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Fileselector) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Hoversel) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Multibuttonentry) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Naviframe) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Popup) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Actionslider) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Bg) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Box) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Bubble) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Button) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Calendar) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Check) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Clock) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Colorselector) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Conformant) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Datetime) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Diskselector) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Flip) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Flipselector) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Frame) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Gengrid) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Genlist) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *GestureLayer) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Glview) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Grid) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Hover) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Image) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Index) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *WinInwin) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Label) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Layout) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Map) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *MapTrack) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Mapbuf) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Menu) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Notify) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Panel) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Panes) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Photocam) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Photo) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Plug) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Progressbar) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Radio) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Route) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *SegmentControl) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Separator) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Slider) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Slideshow) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Spinner) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Table) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Thumb) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Toolbar) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Player) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Video) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Web) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Win) ImageDataConvert(to_cspace C.Evas_Colorspace) (unsafe.Pointer) {
  _cgo_return_ := C.evas_object_image_data_convert(self.obj, to_cspace)
  _go_return_ := unsafe.Pointer(_cgo_return_)
  return _go_return_
}

func (self *Icon) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Scroller) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Entry) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *List) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Ctxpopup) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Dayselector) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *FileselectorButton) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *FileselectorEntry) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Fileselector) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Hoversel) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Multibuttonentry) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Naviframe) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Popup) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Actionslider) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Bg) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Box) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Bubble) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Button) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Calendar) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Check) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Clock) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Colorselector) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Conformant) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Datetime) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Diskselector) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Flip) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Flipselector) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Frame) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Gengrid) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Genlist) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *GestureLayer) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Glview) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Grid) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Hover) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Image) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Index) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *WinInwin) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Label) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Layout) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Map) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *MapTrack) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Mapbuf) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Menu) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Notify) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Panel) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Panes) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Photocam) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Photo) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Plug) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Progressbar) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Radio) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Route) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *SegmentControl) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Separator) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Slider) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Slideshow) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Spinner) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Table) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Thumb) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Toolbar) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Player) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Video) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Web) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Win) ImageDataCopySet(data unsafe.Pointer) () {
  C.evas_object_image_data_copy_set(self.obj, data)
}

func (self *Icon) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Scroller) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Entry) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *List) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Ctxpopup) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Dayselector) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *FileselectorButton) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *FileselectorEntry) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Fileselector) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Hoversel) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Multibuttonentry) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Naviframe) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Popup) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Actionslider) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Bg) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Box) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Bubble) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Button) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Calendar) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Check) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Clock) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Colorselector) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Conformant) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Datetime) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Diskselector) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Flip) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Flipselector) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Frame) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Gengrid) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Genlist) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *GestureLayer) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Glview) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Grid) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Hover) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Image) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Index) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *WinInwin) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Label) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Layout) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Map) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *MapTrack) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Mapbuf) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Menu) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Notify) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Panel) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Panes) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Photocam) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Photo) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Plug) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Progressbar) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Radio) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Route) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *SegmentControl) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Separator) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Slider) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Slideshow) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Spinner) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Table) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Thumb) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Toolbar) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Player) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Video) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Web) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Win) ImageDataUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_data_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Icon) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Scroller) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Entry) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *List) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Ctxpopup) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Dayselector) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *FileselectorButton) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *FileselectorEntry) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Fileselector) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Hoversel) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Multibuttonentry) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Naviframe) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Popup) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Actionslider) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Bg) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Box) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Bubble) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Button) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Calendar) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Check) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Clock) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Colorselector) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Conformant) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Datetime) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Diskselector) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Flip) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Flipselector) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Frame) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Gengrid) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Genlist) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *GestureLayer) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Glview) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Grid) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Hover) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Image) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Index) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *WinInwin) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Label) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Layout) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Map) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *MapTrack) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Mapbuf) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Menu) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Notify) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Panel) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Panes) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Photocam) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Photo) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Plug) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Progressbar) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Radio) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Route) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *SegmentControl) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Separator) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Slider) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Slideshow) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Spinner) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Table) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Thumb) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Toolbar) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Player) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Video) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Web) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Win) ImageAlphaSet(has_alpha bool) () {
  _c_has_alpha := (C.Eina_Bool)(0)
  if has_alpha { _c_has_alpha = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_set(self.obj, _c_has_alpha)
}

func (self *Icon) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Scroller) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Entry) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *List) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Ctxpopup) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Dayselector) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *FileselectorButton) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *FileselectorEntry) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Fileselector) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Hoversel) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Multibuttonentry) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Naviframe) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Popup) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Actionslider) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Bg) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Box) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Bubble) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Button) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Calendar) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Check) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Clock) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Colorselector) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Conformant) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Datetime) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Diskselector) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Flip) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Flipselector) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Frame) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Gengrid) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Genlist) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *GestureLayer) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Glview) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Grid) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Hover) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Image) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Index) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *WinInwin) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Label) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Layout) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Map) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *MapTrack) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Mapbuf) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Menu) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Notify) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Panel) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Panes) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Photocam) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Photo) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Plug) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Progressbar) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Radio) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Route) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *SegmentControl) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Separator) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Slider) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Slideshow) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Spinner) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Table) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Thumb) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Toolbar) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Player) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Video) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Web) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Win) ImageSmoothScaleSet(smooth_scale bool) () {
  _c_smooth_scale := (C.Eina_Bool)(0)
  if smooth_scale { _c_smooth_scale = (C.Eina_Bool)(1) }
  C.evas_object_image_smooth_scale_set(self.obj, _c_smooth_scale)
}

func (self *Icon) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Scroller) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Entry) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *List) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Ctxpopup) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Dayselector) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *FileselectorButton) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *FileselectorEntry) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Fileselector) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Hoversel) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Multibuttonentry) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Naviframe) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Popup) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Actionslider) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Bg) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Box) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Bubble) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Button) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Calendar) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Check) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Clock) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Colorselector) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Conformant) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Datetime) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Diskselector) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Flip) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Flipselector) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Frame) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Gengrid) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Genlist) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *GestureLayer) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Glview) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Grid) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Hover) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Image) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Index) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *WinInwin) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Label) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Layout) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Map) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *MapTrack) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Mapbuf) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Menu) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Notify) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Panel) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Panes) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Photocam) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Photo) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Plug) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Progressbar) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Radio) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Route) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *SegmentControl) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Separator) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Slider) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Slideshow) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Spinner) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Table) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Thumb) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Toolbar) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Player) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Video) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Web) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Win) ImagePreload(cancel bool) () {
  _c_cancel := (C.Eina_Bool)(0)
  if cancel { _c_cancel = (C.Eina_Bool)(1) }
  C.evas_object_image_preload(self.obj, _c_cancel)
}

func (self *Icon) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Scroller) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Entry) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *List) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Ctxpopup) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Dayselector) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *FileselectorButton) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *FileselectorEntry) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Fileselector) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Hoversel) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Multibuttonentry) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Naviframe) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Popup) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Actionslider) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Bg) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Box) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Bubble) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Button) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Calendar) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Check) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Clock) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Colorselector) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Conformant) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Datetime) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Diskselector) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Flip) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Flipselector) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Frame) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Gengrid) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Genlist) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *GestureLayer) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Glview) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Grid) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Hover) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Image) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Index) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *WinInwin) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Label) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Layout) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Map) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *MapTrack) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Mapbuf) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Menu) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Notify) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Panel) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Panes) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Photocam) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Photo) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Plug) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Progressbar) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Radio) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Route) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *SegmentControl) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Separator) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Slider) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Slideshow) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Spinner) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Table) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Thumb) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Toolbar) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Player) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Video) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Web) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Win) ImageReload() () {
  C.evas_object_image_reload(self.obj)
}

func (self *Icon) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) ImagePixelsImport(pixels *C.Evas_Pixel_Import_Source) (bool) {
  _cgo_return_ := C.evas_object_image_pixels_import(self.obj, pixels)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Scroller) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Entry) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *List) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Ctxpopup) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Dayselector) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *FileselectorButton) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *FileselectorEntry) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Fileselector) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Hoversel) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Multibuttonentry) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Naviframe) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Popup) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Actionslider) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Bg) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Box) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Bubble) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Button) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Calendar) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Check) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Clock) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Colorselector) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Conformant) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Datetime) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Diskselector) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Flip) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Flipselector) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Frame) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Gengrid) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Genlist) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *GestureLayer) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Glview) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Grid) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Hover) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Image) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Index) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *WinInwin) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Label) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Layout) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Map) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *MapTrack) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Mapbuf) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Menu) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Notify) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Panel) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Panes) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Photocam) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Photo) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Plug) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Progressbar) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Radio) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Route) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *SegmentControl) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Separator) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Slider) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Slideshow) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Spinner) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Table) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Thumb) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Toolbar) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Player) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Video) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Web) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Win) ImagePixelsDirtySet(dirty bool) () {
  _c_dirty := (C.Eina_Bool)(0)
  if dirty { _c_dirty = (C.Eina_Bool)(1) }
  C.evas_object_image_pixels_dirty_set(self.obj, _c_dirty)
}

func (self *Icon) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Scroller) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Entry) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *List) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Ctxpopup) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Dayselector) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *FileselectorButton) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *FileselectorEntry) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Fileselector) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Hoversel) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Multibuttonentry) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Naviframe) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Popup) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Actionslider) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Bg) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Box) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Bubble) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Button) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Calendar) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Check) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Clock) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Colorselector) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Conformant) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Datetime) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Diskselector) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Flip) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Flipselector) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Frame) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Gengrid) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Genlist) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *GestureLayer) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Glview) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Grid) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Hover) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Image) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Index) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *WinInwin) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Label) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Layout) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Map) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *MapTrack) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Mapbuf) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Menu) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Notify) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Panel) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Panes) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Photocam) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Photo) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Plug) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Progressbar) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Radio) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Route) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *SegmentControl) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Separator) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Slider) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Slideshow) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Spinner) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Table) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Thumb) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Toolbar) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Player) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Video) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Web) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Win) ImageLoadDpiSet(dpi float64) () {
  _c_dpi := C.double(dpi)
  C.evas_object_image_load_dpi_set(self.obj, _c_dpi)
}

func (self *Icon) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Scroller) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Entry) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *List) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Ctxpopup) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Dayselector) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorButton) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorEntry) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Fileselector) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Hoversel) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Multibuttonentry) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Naviframe) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Popup) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Actionslider) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Bg) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Box) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Bubble) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Button) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Calendar) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Check) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Clock) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Colorselector) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Conformant) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Datetime) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Diskselector) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Flip) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Flipselector) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Frame) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Gengrid) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Genlist) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *GestureLayer) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Glview) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Grid) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Hover) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Image) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Index) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *WinInwin) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Label) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Layout) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Map) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *MapTrack) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Mapbuf) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Menu) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Notify) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Panel) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Panes) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Photocam) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Photo) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Plug) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Progressbar) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Radio) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Route) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *SegmentControl) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Separator) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Slider) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Slideshow) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Spinner) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Table) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Thumb) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Toolbar) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Player) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Video) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Web) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Win) ImageLoadSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_size_set(self.obj, _c_w, _c_h)
}

func (self *Icon) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Scroller) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Entry) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *List) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Ctxpopup) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Dayselector) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *FileselectorButton) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *FileselectorEntry) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Fileselector) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Hoversel) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Multibuttonentry) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Naviframe) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Popup) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Actionslider) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Bg) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Box) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Bubble) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Button) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Calendar) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Check) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Clock) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Colorselector) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Conformant) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Datetime) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Diskselector) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Flip) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Flipselector) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Frame) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Gengrid) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Genlist) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *GestureLayer) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Glview) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Grid) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Hover) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Image) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Index) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *WinInwin) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Label) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Layout) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Map) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *MapTrack) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Mapbuf) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Menu) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Notify) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Panel) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Panes) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Photocam) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Photo) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Plug) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Progressbar) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Radio) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Route) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *SegmentControl) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Separator) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Slider) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Slideshow) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Spinner) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Table) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Thumb) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Toolbar) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Player) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Video) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Web) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Win) ImageLoadScaleDownSet(scale_down int) () {
  _c_scale_down := C.int(scale_down)
  C.evas_object_image_load_scale_down_set(self.obj, _c_scale_down)
}

func (self *Icon) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Scroller) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Entry) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *List) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Ctxpopup) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Dayselector) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *FileselectorButton) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *FileselectorEntry) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Fileselector) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Hoversel) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Multibuttonentry) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Naviframe) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Popup) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Actionslider) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Bg) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Box) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Bubble) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Button) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Calendar) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Check) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Clock) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Colorselector) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Conformant) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Datetime) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Diskselector) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Flip) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Flipselector) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Frame) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Gengrid) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Genlist) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *GestureLayer) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Glview) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Grid) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Hover) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Image) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Index) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *WinInwin) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Label) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Layout) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Map) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *MapTrack) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Mapbuf) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Menu) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Notify) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Panel) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Panes) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Photocam) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Photo) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Plug) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Progressbar) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Radio) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Route) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *SegmentControl) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Separator) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Slider) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Slideshow) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Spinner) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Table) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Thumb) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Toolbar) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Player) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Video) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Web) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Win) ImageLoadRegionSet(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_image_load_region_set(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Icon) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Scroller) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Entry) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *List) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Ctxpopup) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Dayselector) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *FileselectorButton) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *FileselectorEntry) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Fileselector) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Hoversel) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Multibuttonentry) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Naviframe) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Popup) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Actionslider) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Bg) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Box) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Bubble) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Button) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Calendar) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Check) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Clock) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Colorselector) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Conformant) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Datetime) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Diskselector) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Flip) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Flipselector) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Frame) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Gengrid) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Genlist) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *GestureLayer) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Glview) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Grid) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Hover) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Image) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Index) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *WinInwin) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Label) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Layout) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Map) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *MapTrack) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Mapbuf) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Menu) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Notify) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Panel) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Panes) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Photocam) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Photo) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Plug) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Progressbar) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Radio) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Route) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *SegmentControl) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Separator) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Slider) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Slideshow) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Spinner) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Table) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Thumb) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Toolbar) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Player) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Video) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Web) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Win) ImageLoadOrientationSet(enable bool) () {
  _c_enable := (C.Eina_Bool)(0)
  if enable { _c_enable = (C.Eina_Bool)(1) }
  C.evas_object_image_load_orientation_set(self.obj, _c_enable)
}

func (self *Icon) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Scroller) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Entry) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *List) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Ctxpopup) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Dayselector) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *FileselectorButton) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *FileselectorEntry) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Fileselector) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Hoversel) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Multibuttonentry) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Naviframe) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Popup) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Actionslider) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Bg) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Box) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Bubble) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Button) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Calendar) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Check) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Clock) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Colorselector) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Conformant) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Datetime) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Diskselector) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Flip) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Flipselector) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Frame) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Gengrid) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Genlist) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *GestureLayer) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Glview) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Grid) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Hover) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Image) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Index) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *WinInwin) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Label) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Layout) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Map) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *MapTrack) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Mapbuf) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Menu) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Notify) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Panel) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Panes) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Photocam) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Photo) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Plug) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Progressbar) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Radio) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Route) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *SegmentControl) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Separator) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Slider) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Slideshow) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Spinner) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Table) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Thumb) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Toolbar) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Player) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Video) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Web) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Win) ImageColorspaceSet(cspace C.Evas_Colorspace) () {
  C.evas_object_image_colorspace_set(self.obj, cspace)
}

func (self *Icon) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Scroller) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Entry) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *List) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Ctxpopup) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Dayselector) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *FileselectorButton) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *FileselectorEntry) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Fileselector) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Hoversel) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Multibuttonentry) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Naviframe) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Popup) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Actionslider) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Bg) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Box) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Bubble) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Button) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Calendar) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Check) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Clock) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Colorselector) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Conformant) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Datetime) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Diskselector) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Flip) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Flipselector) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Frame) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Gengrid) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Genlist) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *GestureLayer) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Glview) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Grid) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Hover) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Image) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Index) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *WinInwin) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Label) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Layout) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Map) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *MapTrack) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Mapbuf) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Menu) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Notify) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Panel) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Panes) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Photocam) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Photo) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Plug) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Progressbar) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Radio) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Route) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *SegmentControl) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Separator) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Slider) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Slideshow) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Spinner) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Table) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Thumb) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Toolbar) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Player) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Video) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Web) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Win) ImageNativeSurfaceSet(surf *C.Evas_Native_Surface) () {
  C.evas_object_image_native_surface_set(self.obj, surf)
}

func (self *Icon) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Scroller) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Entry) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *List) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Ctxpopup) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Dayselector) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *FileselectorButton) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *FileselectorEntry) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Fileselector) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Hoversel) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Multibuttonentry) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Naviframe) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Popup) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Actionslider) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Bg) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Box) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Bubble) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Button) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Calendar) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Check) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Clock) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Colorselector) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Conformant) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Datetime) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Diskselector) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Flip) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Flipselector) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Frame) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Gengrid) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Genlist) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *GestureLayer) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Glview) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Grid) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Hover) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Image) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Index) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *WinInwin) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Label) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Layout) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Map) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *MapTrack) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Mapbuf) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Menu) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Notify) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Panel) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Panes) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Photocam) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Photo) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Plug) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Progressbar) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Radio) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Route) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *SegmentControl) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Separator) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Slider) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Slideshow) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Spinner) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Table) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Thumb) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Toolbar) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Player) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Video) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Web) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Win) ImageVideoSurfaceSet(surf *C.Evas_Video_Surface) () {
  C.evas_object_image_video_surface_set(self.obj, surf)
}

func (self *Icon) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Scroller) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Entry) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *List) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Ctxpopup) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Dayselector) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *FileselectorButton) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *FileselectorEntry) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Fileselector) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Hoversel) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Multibuttonentry) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Naviframe) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Popup) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Actionslider) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Bg) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Box) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Bubble) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Button) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Calendar) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Check) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Clock) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Colorselector) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Conformant) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Datetime) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Diskselector) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Flip) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Flipselector) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Frame) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Gengrid) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Genlist) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *GestureLayer) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Glview) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Grid) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Hover) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Image) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Index) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *WinInwin) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Label) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Layout) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Map) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *MapTrack) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Mapbuf) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Menu) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Notify) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Panel) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Panes) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Photocam) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Photo) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Plug) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Progressbar) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Radio) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Route) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *SegmentControl) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Separator) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Slider) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Slideshow) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Spinner) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Table) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Thumb) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Toolbar) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Player) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Video) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Web) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Win) ImageScaleHintSet(hint C.Evas_Image_Scale_Hint) () {
  C.evas_object_image_scale_hint_set(self.obj, hint)
}

func (self *Icon) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Scroller) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Entry) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *List) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Ctxpopup) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Dayselector) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *FileselectorButton) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *FileselectorEntry) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Fileselector) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Hoversel) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Multibuttonentry) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Naviframe) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Popup) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Actionslider) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Bg) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Box) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Bubble) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Button) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Calendar) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Check) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Clock) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Colorselector) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Conformant) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Datetime) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Diskselector) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Flip) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Flipselector) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Frame) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Gengrid) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Genlist) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *GestureLayer) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Glview) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Grid) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Hover) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Image) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Index) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *WinInwin) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Label) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Layout) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Map) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *MapTrack) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Mapbuf) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Menu) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Notify) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Panel) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Panes) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Photocam) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Photo) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Plug) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Progressbar) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Radio) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Route) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *SegmentControl) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Separator) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Slider) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Slideshow) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Spinner) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Table) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Thumb) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Toolbar) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Player) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Video) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Web) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Win) ImageContentHintSet(hint C.Evas_Image_Content_Hint) () {
  C.evas_object_image_content_hint_set(self.obj, hint)
}

func (self *Icon) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Scroller) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Entry) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *List) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Ctxpopup) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Dayselector) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *FileselectorButton) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *FileselectorEntry) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Fileselector) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Hoversel) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Multibuttonentry) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Naviframe) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Popup) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Actionslider) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Bg) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Box) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Bubble) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Button) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Calendar) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Check) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Clock) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Colorselector) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Conformant) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Datetime) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Diskselector) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Flip) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Flipselector) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Frame) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Gengrid) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Genlist) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *GestureLayer) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Glview) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Grid) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Hover) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Image) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Index) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *WinInwin) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Label) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Layout) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Map) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *MapTrack) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Mapbuf) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Menu) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Notify) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Panel) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Panes) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Photocam) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Photo) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Plug) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Progressbar) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Radio) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Route) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *SegmentControl) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Separator) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Slider) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Slideshow) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Spinner) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Table) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Thumb) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Toolbar) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Player) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Video) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Web) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Win) ImageAlphaMaskSet(ismask bool) () {
  _c_ismask := (C.Eina_Bool)(0)
  if ismask { _c_ismask = (C.Eina_Bool)(1) }
  C.evas_object_image_alpha_mask_set(self.obj, _c_ismask)
}

func (self *Icon) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) ImageSourceSet(src EvasObjectInterface) (bool) {
  var _c_src *C.Evas_Object
  if src != nil { _c_src = src.GetObj() }
  _cgo_return_ := C.evas_object_image_source_set(self.obj, _c_src)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) ImageSourceUnset() (bool) {
  _cgo_return_ := C.evas_object_image_source_unset(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Scroller) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Entry) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *List) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Ctxpopup) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Dayselector) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *FileselectorButton) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *FileselectorEntry) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Fileselector) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Hoversel) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Multibuttonentry) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Naviframe) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Popup) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Actionslider) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Bg) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Box) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Bubble) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Button) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Calendar) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Check) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Clock) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Colorselector) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Conformant) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Datetime) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Diskselector) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Flip) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Flipselector) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Frame) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Gengrid) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Genlist) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *GestureLayer) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Glview) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Grid) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Hover) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Image) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Index) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *WinInwin) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Label) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Layout) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Map) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *MapTrack) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Mapbuf) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Menu) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Notify) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Panel) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Panes) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Photocam) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Photo) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Plug) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Progressbar) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Radio) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Route) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *SegmentControl) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Separator) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Slider) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Slideshow) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Spinner) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Table) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Thumb) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Toolbar) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Player) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Video) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Web) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Win) ImageAnimatedFrameSet(frame_num int) () {
  _c_frame_num := C.int(frame_num)
  C.evas_object_image_animated_frame_set(self.obj, _c_frame_num)
}

func (self *Icon) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Scroller) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Entry) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *List) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Ctxpopup) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Dayselector) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *FileselectorButton) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *FileselectorEntry) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Fileselector) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Hoversel) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Multibuttonentry) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Naviframe) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Popup) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Actionslider) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Bg) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Box) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Bubble) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Button) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Calendar) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Check) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Clock) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Colorselector) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Conformant) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Datetime) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Diskselector) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Flip) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Flipselector) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Frame) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Gengrid) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Genlist) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *GestureLayer) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Glview) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Grid) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Hover) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Image) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Index) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *WinInwin) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Label) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Layout) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Map) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *MapTrack) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Mapbuf) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Menu) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Notify) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Panel) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Panes) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Photocam) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Photo) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Plug) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Progressbar) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Radio) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Route) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *SegmentControl) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Separator) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Slider) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Slideshow) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Spinner) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Table) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Thumb) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Toolbar) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Player) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Video) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Web) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Win) TextFontSourceSet(font string) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_source_set(self.obj, _c_font)
}

func (self *Icon) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Scroller) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Entry) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *List) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Ctxpopup) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Dayselector) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *FileselectorButton) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *FileselectorEntry) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Fileselector) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Hoversel) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Multibuttonentry) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Naviframe) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Popup) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Actionslider) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Bg) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Box) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Bubble) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Button) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Calendar) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Check) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Clock) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Colorselector) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Conformant) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Datetime) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Diskselector) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Flip) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Flipselector) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Frame) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Gengrid) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Genlist) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *GestureLayer) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Glview) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Grid) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Hover) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Image) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Index) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *WinInwin) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Label) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Layout) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Map) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *MapTrack) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Mapbuf) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Menu) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Notify) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Panel) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Panes) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Photocam) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Photo) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Plug) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Progressbar) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Radio) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Route) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *SegmentControl) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Separator) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Slider) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Slideshow) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Spinner) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Table) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Thumb) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Toolbar) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Player) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Video) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Web) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Win) TextFontSet(font string, size C.Evas_Font_Size) () {
  _c_font := C.CString(font)
  C.evas_object_text_font_set(self.obj, _c_font, size)
}

func (self *Icon) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Scroller) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Entry) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *List) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Ctxpopup) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Dayselector) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *FileselectorButton) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *FileselectorEntry) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Fileselector) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Hoversel) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Multibuttonentry) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Naviframe) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Popup) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Actionslider) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Bg) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Box) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Bubble) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Button) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Calendar) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Check) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Clock) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Colorselector) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Conformant) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Datetime) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Diskselector) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Flip) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Flipselector) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Frame) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Gengrid) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Genlist) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *GestureLayer) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Glview) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Grid) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Hover) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Image) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Index) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *WinInwin) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Label) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Layout) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Map) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *MapTrack) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Mapbuf) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Menu) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Notify) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Panel) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Panes) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Photocam) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Photo) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Plug) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Progressbar) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Radio) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Route) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *SegmentControl) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Separator) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Slider) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Slideshow) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Spinner) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Table) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Thumb) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Toolbar) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Player) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Video) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Web) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Win) TextTextSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_text_text_set(self.obj, _c_text)
}

func (self *Icon) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Scroller) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Entry) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *List) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Ctxpopup) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Dayselector) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *FileselectorButton) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *FileselectorEntry) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Fileselector) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Hoversel) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Multibuttonentry) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Naviframe) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Popup) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Actionslider) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Bg) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Box) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Bubble) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Button) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Calendar) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Check) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Clock) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Colorselector) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Conformant) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Datetime) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Diskselector) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Flip) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Flipselector) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Frame) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Gengrid) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Genlist) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *GestureLayer) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Glview) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Grid) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Hover) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Image) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Index) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *WinInwin) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Label) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Layout) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Map) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *MapTrack) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Mapbuf) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Menu) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Notify) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Panel) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Panes) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Photocam) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Photo) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Plug) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Progressbar) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Radio) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Route) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *SegmentControl) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Separator) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Slider) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Slideshow) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Spinner) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Table) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Thumb) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Toolbar) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Player) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Video) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Web) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Win) TextBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_text_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Icon) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Scroller) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Entry) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *List) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Ctxpopup) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Dayselector) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *FileselectorButton) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *FileselectorEntry) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Fileselector) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Hoversel) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Multibuttonentry) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Naviframe) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Popup) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Actionslider) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Bg) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Box) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Bubble) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Button) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Calendar) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Check) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Clock) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Colorselector) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Conformant) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Datetime) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Diskselector) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Flip) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Flipselector) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Frame) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Gengrid) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Genlist) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *GestureLayer) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Glview) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Grid) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Hover) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Image) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Index) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *WinInwin) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Label) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Layout) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Map) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *MapTrack) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Mapbuf) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Menu) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Notify) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Panel) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Panes) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Photocam) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Photo) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Plug) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Progressbar) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Radio) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Route) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *SegmentControl) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Separator) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Slider) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Slideshow) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Spinner) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Table) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Thumb) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Toolbar) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Player) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Video) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Web) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Win) TextStyleSet(type_ C.Evas_Text_Style_Type) () {
  C.evas_object_text_style_set(self.obj, type_)
}

func (self *Icon) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Scroller) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Entry) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *List) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Ctxpopup) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Dayselector) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorButton) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorEntry) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Fileselector) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hoversel) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Multibuttonentry) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Naviframe) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Popup) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Actionslider) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bg) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Box) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bubble) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Button) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Calendar) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Check) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Clock) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Colorselector) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Conformant) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Datetime) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Diskselector) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flip) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flipselector) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Frame) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Gengrid) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Genlist) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *GestureLayer) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Glview) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Grid) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hover) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Image) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Index) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *WinInwin) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Label) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Layout) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Map) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *MapTrack) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Mapbuf) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Menu) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Notify) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panel) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panes) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photocam) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photo) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Plug) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Progressbar) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Radio) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Route) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *SegmentControl) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Separator) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slider) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slideshow) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Spinner) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Table) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Thumb) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Toolbar) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Player) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Video) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Web) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Win) TextShadowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_shadow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Icon) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Scroller) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Entry) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *List) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Ctxpopup) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Dayselector) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorButton) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorEntry) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Fileselector) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hoversel) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Multibuttonentry) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Naviframe) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Popup) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Actionslider) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bg) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Box) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bubble) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Button) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Calendar) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Check) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Clock) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Colorselector) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Conformant) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Datetime) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Diskselector) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flip) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flipselector) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Frame) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Gengrid) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Genlist) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *GestureLayer) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Glview) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Grid) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hover) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Image) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Index) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *WinInwin) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Label) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Layout) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Map) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *MapTrack) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Mapbuf) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Menu) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Notify) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panel) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panes) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photocam) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photo) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Plug) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Progressbar) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Radio) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Route) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *SegmentControl) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Separator) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slider) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slideshow) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Spinner) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Table) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Thumb) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Toolbar) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Player) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Video) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Web) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Win) TextGlowColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Icon) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Scroller) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Entry) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *List) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Ctxpopup) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Dayselector) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorButton) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorEntry) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Fileselector) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hoversel) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Multibuttonentry) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Naviframe) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Popup) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Actionslider) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bg) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Box) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bubble) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Button) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Calendar) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Check) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Clock) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Colorselector) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Conformant) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Datetime) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Diskselector) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flip) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flipselector) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Frame) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Gengrid) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Genlist) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *GestureLayer) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Glview) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Grid) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hover) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Image) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Index) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *WinInwin) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Label) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Layout) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Map) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *MapTrack) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Mapbuf) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Menu) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Notify) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panel) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panes) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photocam) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photo) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Plug) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Progressbar) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Radio) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Route) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *SegmentControl) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Separator) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slider) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slideshow) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Spinner) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Table) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Thumb) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Toolbar) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Player) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Video) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Web) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Win) TextGlow2ColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_glow2_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Icon) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Scroller) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Entry) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *List) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Ctxpopup) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Dayselector) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorButton) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorEntry) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Fileselector) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hoversel) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Multibuttonentry) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Naviframe) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Popup) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Actionslider) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bg) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Box) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bubble) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Button) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Calendar) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Check) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Clock) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Colorselector) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Conformant) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Datetime) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Diskselector) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flip) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flipselector) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Frame) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Gengrid) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Genlist) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *GestureLayer) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Glview) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Grid) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hover) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Image) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Index) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *WinInwin) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Label) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Layout) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Map) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *MapTrack) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Mapbuf) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Menu) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Notify) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panel) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panes) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photocam) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photo) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Plug) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Progressbar) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Radio) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Route) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *SegmentControl) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Separator) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slider) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slideshow) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Spinner) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Table) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Thumb) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Toolbar) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Player) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Video) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Web) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Win) TextOutlineColorSet(r int, g int, b int, a int) () {
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_text_outline_color_set(self.obj, _c_r, _c_g, _c_b, _c_a)
}

func (self *Icon) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Scroller) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Entry) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *List) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Ctxpopup) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Dayselector) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *FileselectorButton) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *FileselectorEntry) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Fileselector) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Hoversel) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Multibuttonentry) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Naviframe) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Popup) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Actionslider) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Bg) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Box) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Bubble) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Button) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Calendar) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Check) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Clock) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Colorselector) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Conformant) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Datetime) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Diskselector) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Flip) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Flipselector) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Frame) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Gengrid) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Genlist) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *GestureLayer) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Glview) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Grid) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Hover) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Image) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Index) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *WinInwin) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Label) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Layout) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Map) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *MapTrack) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Mapbuf) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Menu) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Notify) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Panel) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Panes) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Photocam) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Photo) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Plug) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Progressbar) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Radio) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Route) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *SegmentControl) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Separator) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Slider) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Slideshow) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Spinner) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Table) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Thumb) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Toolbar) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Player) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Video) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Web) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Win) TextblockStyleSet(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_set(self.obj, ts)
}

func (self *Icon) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Scroller) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Entry) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *List) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Ctxpopup) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Dayselector) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *FileselectorButton) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *FileselectorEntry) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Fileselector) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Hoversel) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Multibuttonentry) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Naviframe) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Popup) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Actionslider) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Bg) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Box) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Bubble) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Button) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Calendar) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Check) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Clock) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Colorselector) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Conformant) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Datetime) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Diskselector) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Flip) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Flipselector) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Frame) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Gengrid) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Genlist) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *GestureLayer) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Glview) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Grid) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Hover) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Image) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Index) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *WinInwin) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Label) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Layout) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Map) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *MapTrack) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Mapbuf) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Menu) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Notify) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Panel) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Panes) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Photocam) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Photo) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Plug) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Progressbar) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Radio) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Route) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *SegmentControl) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Separator) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Slider) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Slideshow) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Spinner) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Table) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Thumb) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Toolbar) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Player) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Video) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Web) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Win) TextblockStyleUserPush(ts *C.Evas_Textblock_Style) () {
  C.evas_object_textblock_style_user_push(self.obj, ts)
}

func (self *Icon) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Scroller) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Entry) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *List) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Ctxpopup) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Dayselector) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *FileselectorButton) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *FileselectorEntry) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Fileselector) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Hoversel) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Multibuttonentry) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Naviframe) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Popup) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Actionslider) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Bg) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Box) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Bubble) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Button) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Calendar) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Check) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Clock) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Colorselector) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Conformant) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Datetime) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Diskselector) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Flip) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Flipselector) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Frame) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Gengrid) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Genlist) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *GestureLayer) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Glview) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Grid) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Hover) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Image) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Index) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *WinInwin) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Label) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Layout) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Map) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *MapTrack) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Mapbuf) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Menu) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Notify) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Panel) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Panes) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Photocam) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Photo) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Plug) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Progressbar) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Radio) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Route) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *SegmentControl) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Separator) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Slider) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Slideshow) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Spinner) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Table) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Thumb) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Toolbar) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Player) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Video) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Web) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Win) TextblockStyleUserPop() () {
  C.evas_object_textblock_style_user_pop(self.obj)
}

func (self *Icon) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Scroller) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Entry) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *List) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Ctxpopup) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Dayselector) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *FileselectorButton) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *FileselectorEntry) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Fileselector) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Hoversel) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Multibuttonentry) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Naviframe) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Popup) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Actionslider) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Bg) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Box) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Bubble) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Button) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Calendar) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Check) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Clock) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Colorselector) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Conformant) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Datetime) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Diskselector) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Flip) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Flipselector) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Frame) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Gengrid) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Genlist) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *GestureLayer) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Glview) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Grid) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Hover) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Image) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Index) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *WinInwin) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Label) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Layout) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Map) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *MapTrack) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Mapbuf) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Menu) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Notify) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Panel) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Panes) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Photocam) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Photo) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Plug) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Progressbar) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Radio) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Route) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *SegmentControl) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Separator) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Slider) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Slideshow) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Spinner) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Table) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Thumb) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Toolbar) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Player) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Video) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Web) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Win) TextblockReplaceCharSet(ch string) () {
  _c_ch := C.CString(ch)
  C.evas_object_textblock_replace_char_set(self.obj, _c_ch)
}

func (self *Icon) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Scroller) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Entry) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *List) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Ctxpopup) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Dayselector) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *FileselectorButton) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *FileselectorEntry) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Fileselector) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Hoversel) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Multibuttonentry) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Naviframe) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Popup) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Actionslider) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Bg) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Box) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Bubble) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Button) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Calendar) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Check) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Clock) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Colorselector) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Conformant) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Datetime) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Diskselector) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Flip) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Flipselector) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Frame) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Gengrid) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Genlist) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *GestureLayer) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Glview) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Grid) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Hover) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Image) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Index) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *WinInwin) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Label) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Layout) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Map) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *MapTrack) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Mapbuf) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Menu) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Notify) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Panel) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Panes) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Photocam) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Photo) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Plug) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Progressbar) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Radio) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Route) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *SegmentControl) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Separator) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Slider) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Slideshow) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Spinner) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Table) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Thumb) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Toolbar) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Player) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Video) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Web) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Win) TextblockReplaceCharGet() (string) {
  _cgo_return_ := C.evas_object_textblock_replace_char_get(self.obj)
  _go_return_ := C.GoString(_cgo_return_)
  return _go_return_
}

func (self *Icon) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Scroller) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Entry) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *List) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Ctxpopup) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Dayselector) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *FileselectorButton) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *FileselectorEntry) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Fileselector) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Hoversel) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Multibuttonentry) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Naviframe) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Popup) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Actionslider) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Bg) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Box) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Bubble) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Button) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Calendar) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Check) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Clock) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Colorselector) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Conformant) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Datetime) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Diskselector) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Flip) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Flipselector) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Frame) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Gengrid) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Genlist) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *GestureLayer) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Glview) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Grid) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Hover) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Image) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Index) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *WinInwin) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Label) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Layout) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Map) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *MapTrack) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Mapbuf) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Menu) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Notify) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Panel) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Panes) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Photocam) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Photo) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Plug) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Progressbar) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Radio) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Route) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *SegmentControl) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Separator) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Slider) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Slideshow) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Spinner) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Table) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Thumb) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Toolbar) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Player) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Video) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Web) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Win) TextblockValignSet(align float64) () {
  _c_align := C.double(align)
  C.evas_object_textblock_valign_set(self.obj, _c_align)
}

func (self *Icon) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Scroller) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Entry) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *List) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Ctxpopup) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Dayselector) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *FileselectorButton) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *FileselectorEntry) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Fileselector) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Hoversel) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Multibuttonentry) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Naviframe) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Popup) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Actionslider) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Bg) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Box) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Bubble) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Button) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Calendar) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Check) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Clock) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Colorselector) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Conformant) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Datetime) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Diskselector) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Flip) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Flipselector) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Frame) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Gengrid) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Genlist) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *GestureLayer) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Glview) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Grid) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Hover) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Image) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Index) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *WinInwin) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Label) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Layout) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Map) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *MapTrack) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Mapbuf) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Menu) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Notify) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Panel) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Panes) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Photocam) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Photo) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Plug) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Progressbar) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Radio) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Route) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *SegmentControl) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Separator) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Slider) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Slideshow) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Spinner) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Table) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Thumb) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Toolbar) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Player) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Video) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Web) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Win) TextblockBidiDelimitersSet(delim string) () {
  _c_delim := C.CString(delim)
  C.evas_object_textblock_bidi_delimiters_set(self.obj, _c_delim)
}

func (self *Icon) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Scroller) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Entry) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *List) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Ctxpopup) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Dayselector) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *FileselectorButton) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *FileselectorEntry) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Fileselector) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Hoversel) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Multibuttonentry) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Naviframe) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Popup) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Actionslider) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Bg) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Box) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Bubble) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Button) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Calendar) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Check) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Clock) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Colorselector) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Conformant) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Datetime) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Diskselector) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Flip) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Flipselector) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Frame) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Gengrid) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Genlist) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *GestureLayer) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Glview) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Grid) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Hover) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Image) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Index) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *WinInwin) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Label) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Layout) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Map) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *MapTrack) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Mapbuf) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Menu) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Notify) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Panel) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Panes) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Photocam) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Photo) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Plug) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Progressbar) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Radio) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Route) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *SegmentControl) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Separator) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Slider) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Slideshow) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Spinner) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Table) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Thumb) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Toolbar) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Player) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Video) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Web) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Win) TextblockLegacyNewlineSet(mode bool) () {
  _c_mode := (C.Eina_Bool)(0)
  if mode { _c_mode = (C.Eina_Bool)(1) }
  C.evas_object_textblock_legacy_newline_set(self.obj, _c_mode)
}

func (self *Icon) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Scroller) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Entry) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *List) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Ctxpopup) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Dayselector) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *FileselectorButton) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *FileselectorEntry) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Fileselector) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Hoversel) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Multibuttonentry) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Naviframe) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Popup) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Actionslider) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Bg) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Box) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Bubble) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Button) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Calendar) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Check) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Clock) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Colorselector) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Conformant) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Datetime) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Diskselector) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Flip) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Flipselector) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Frame) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Gengrid) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Genlist) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *GestureLayer) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Glview) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Grid) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Hover) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Image) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Index) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *WinInwin) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Label) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Layout) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Map) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *MapTrack) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Mapbuf) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Menu) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Notify) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Panel) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Panes) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Photocam) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Photo) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Plug) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Progressbar) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Radio) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Route) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *SegmentControl) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Separator) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Slider) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Slideshow) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Spinner) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Table) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Thumb) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Toolbar) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Player) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Video) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Web) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Win) TextblockTextMarkupSet(text string) () {
  _c_text := C.CString(text)
  C.evas_object_textblock_text_markup_set(self.obj, _c_text)
}

func (self *Icon) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Scroller) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Entry) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *List) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Ctxpopup) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Dayselector) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *FileselectorButton) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *FileselectorEntry) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Fileselector) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Hoversel) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Multibuttonentry) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Naviframe) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Popup) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Actionslider) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Bg) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Box) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Bubble) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Button) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Calendar) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Check) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Clock) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Colorselector) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Conformant) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Datetime) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Diskselector) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Flip) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Flipselector) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Frame) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Gengrid) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Genlist) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *GestureLayer) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Glview) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Grid) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Hover) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Image) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Index) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *WinInwin) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Label) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Layout) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Map) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *MapTrack) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Mapbuf) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Menu) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Notify) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Panel) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Panes) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Photocam) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Photo) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Plug) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Progressbar) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Radio) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Route) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *SegmentControl) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Separator) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Slider) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Slideshow) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Spinner) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Table) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Thumb) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Toolbar) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Player) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Video) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Web) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Win) TextblockClear() () {
  C.evas_object_textblock_clear(self.obj)
}

func (self *Icon) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Scroller) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Entry) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *List) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Ctxpopup) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Dayselector) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorButton) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorEntry) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Fileselector) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Hoversel) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Multibuttonentry) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Naviframe) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Popup) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Actionslider) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Bg) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Box) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Bubble) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Button) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Calendar) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Check) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Clock) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Colorselector) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Conformant) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Datetime) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Diskselector) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Flip) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Flipselector) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Frame) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Gengrid) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Genlist) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *GestureLayer) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Glview) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Grid) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Hover) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Image) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Index) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *WinInwin) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Label) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Layout) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Map) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *MapTrack) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Mapbuf) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Menu) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Notify) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Panel) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Panes) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Photocam) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Photo) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Plug) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Progressbar) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Radio) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Route) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *SegmentControl) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Separator) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Slider) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Slideshow) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Spinner) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Table) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Thumb) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Toolbar) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Player) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Video) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Web) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Win) TextgridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_size_set(self.obj, _c_w, _c_h)
}

func (self *Icon) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Scroller) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Entry) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *List) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Ctxpopup) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Dayselector) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *FileselectorButton) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *FileselectorEntry) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Fileselector) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Hoversel) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Multibuttonentry) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Naviframe) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Popup) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Actionslider) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Bg) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Box) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Bubble) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Button) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Calendar) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Check) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Clock) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Colorselector) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Conformant) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Datetime) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Diskselector) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Flip) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Flipselector) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Frame) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Gengrid) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Genlist) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *GestureLayer) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Glview) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Grid) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Hover) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Image) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Index) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *WinInwin) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Label) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Layout) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Map) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *MapTrack) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Mapbuf) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Menu) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Notify) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Panel) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Panes) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Photocam) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Photo) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Plug) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Progressbar) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Radio) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Route) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *SegmentControl) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Separator) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Slider) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Slideshow) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Spinner) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Table) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Thumb) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Toolbar) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Player) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Video) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Web) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Win) TextgridFontSourceSet(font_source string) () {
  _c_font_source := C.CString(font_source)
  C.evas_object_textgrid_font_source_set(self.obj, _c_font_source)
}

func (self *Icon) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Scroller) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Entry) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *List) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Ctxpopup) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Dayselector) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *FileselectorButton) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *FileselectorEntry) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Fileselector) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Hoversel) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Multibuttonentry) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Naviframe) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Popup) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Actionslider) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Bg) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Box) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Bubble) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Button) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Calendar) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Check) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Clock) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Colorselector) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Conformant) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Datetime) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Diskselector) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Flip) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Flipselector) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Frame) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Gengrid) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Genlist) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *GestureLayer) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Glview) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Grid) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Hover) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Image) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Index) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *WinInwin) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Label) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Layout) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Map) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *MapTrack) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Mapbuf) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Menu) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Notify) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Panel) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Panes) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Photocam) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Photo) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Plug) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Progressbar) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Radio) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Route) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *SegmentControl) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Separator) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Slider) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Slideshow) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Spinner) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Table) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Thumb) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Toolbar) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Player) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Video) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Web) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Win) TextgridFontSet(font_name string, font_size C.Evas_Font_Size) () {
  _c_font_name := C.CString(font_name)
  C.evas_object_textgrid_font_set(self.obj, _c_font_name, font_size)
}

func (self *Icon) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Scroller) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Entry) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *List) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Ctxpopup) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Dayselector) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorButton) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *FileselectorEntry) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Fileselector) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hoversel) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Multibuttonentry) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Naviframe) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Popup) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Actionslider) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bg) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Box) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Bubble) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Button) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Calendar) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Check) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Clock) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Colorselector) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Conformant) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Datetime) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Diskselector) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flip) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Flipselector) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Frame) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Gengrid) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Genlist) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *GestureLayer) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Glview) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Grid) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Hover) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Image) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Index) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *WinInwin) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Label) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Layout) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Map) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *MapTrack) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Mapbuf) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Menu) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Notify) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panel) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Panes) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photocam) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Photo) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Plug) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Progressbar) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Radio) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Route) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *SegmentControl) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Separator) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slider) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Slideshow) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Spinner) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Table) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Thumb) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Toolbar) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Player) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Video) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Web) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Win) TextgridPaletteSet(pal C.Evas_Textgrid_Palette, idx int, r int, g int, b int, a int) () {
  _c_idx := C.int(idx)
  _c_r := C.int(r)
  _c_g := C.int(g)
  _c_b := C.int(b)
  _c_a := C.int(a)
  C.evas_object_textgrid_palette_set(self.obj, pal, _c_idx, _c_r, _c_g, _c_b, _c_a)
}

func (self *Icon) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Scroller) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Entry) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *List) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Ctxpopup) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Dayselector) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *FileselectorButton) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *FileselectorEntry) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Fileselector) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Hoversel) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Multibuttonentry) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Naviframe) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Popup) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Actionslider) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Bg) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Box) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Bubble) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Button) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Calendar) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Check) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Clock) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Colorselector) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Conformant) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Datetime) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Diskselector) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Flip) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Flipselector) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Frame) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Gengrid) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Genlist) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *GestureLayer) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Glview) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Grid) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Hover) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Image) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Index) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *WinInwin) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Label) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Layout) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Map) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *MapTrack) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Mapbuf) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Menu) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Notify) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Panel) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Panes) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Photocam) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Photo) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Plug) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Progressbar) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Radio) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Route) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *SegmentControl) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Separator) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Slider) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Slideshow) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Spinner) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Table) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Thumb) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Toolbar) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Player) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Video) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Web) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Win) TextgridSupportedFontStylesSet(styles C.Evas_Textgrid_Font_Style) () {
  C.evas_object_textgrid_supported_font_styles_set(self.obj, styles)
}

func (self *Icon) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Scroller) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Entry) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *List) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Ctxpopup) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Dayselector) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *FileselectorButton) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *FileselectorEntry) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Fileselector) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Hoversel) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Multibuttonentry) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Naviframe) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Popup) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Actionslider) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Bg) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Box) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Bubble) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Button) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Calendar) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Check) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Clock) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Colorselector) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Conformant) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Datetime) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Diskselector) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Flip) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Flipselector) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Frame) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Gengrid) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Genlist) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *GestureLayer) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Glview) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Grid) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Hover) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Image) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Index) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *WinInwin) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Label) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Layout) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Map) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *MapTrack) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Mapbuf) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Menu) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Notify) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Panel) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Panes) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Photocam) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Photo) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Plug) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Progressbar) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Radio) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Route) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *SegmentControl) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Separator) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Slider) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Slideshow) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Spinner) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Table) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Thumb) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Toolbar) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Player) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Video) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Web) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Win) TextgridCellrowSet(y int, row *C.Evas_Textgrid_Cell) () {
  _c_y := C.int(y)
  C.evas_object_textgrid_cellrow_set(self.obj, _c_y, row)
}

func (self *Icon) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Scroller) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Entry) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *List) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Ctxpopup) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Dayselector) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *FileselectorButton) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *FileselectorEntry) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Fileselector) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Hoversel) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Multibuttonentry) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Naviframe) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Popup) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Actionslider) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Bg) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Box) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Bubble) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Button) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Calendar) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Check) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Clock) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Colorselector) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Conformant) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Datetime) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Diskselector) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Flip) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Flipselector) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Frame) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Gengrid) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Genlist) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *GestureLayer) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Glview) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Grid) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Hover) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Image) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Index) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *WinInwin) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Label) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Layout) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Map) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *MapTrack) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Mapbuf) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Menu) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Notify) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Panel) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Panes) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Photocam) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Photo) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Plug) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Progressbar) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Radio) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Route) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *SegmentControl) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Separator) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Slider) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Slideshow) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Spinner) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Table) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Thumb) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Toolbar) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Player) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Video) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Web) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Win) TextgridUpdateAdd(x int, y int, w int, h int) () {
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_textgrid_update_add(self.obj, _c_x, _c_y, _c_w, _c_h)
}

func (self *Icon) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Scroller) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Entry) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *List) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Ctxpopup) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Dayselector) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *FileselectorButton) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *FileselectorEntry) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Fileselector) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Hoversel) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Multibuttonentry) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Naviframe) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Popup) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Actionslider) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Bg) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Box) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Bubble) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Button) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Calendar) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Check) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Clock) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Colorselector) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Conformant) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Datetime) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Diskselector) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Flip) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Flipselector) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Frame) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Gengrid) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Genlist) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *GestureLayer) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Glview) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Grid) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Hover) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Image) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Index) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *WinInwin) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Label) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Layout) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Map) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *MapTrack) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Mapbuf) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Menu) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Notify) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Panel) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Panes) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Photocam) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Photo) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Plug) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Progressbar) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Radio) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Route) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *SegmentControl) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Separator) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Slider) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Slideshow) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Spinner) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Table) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Thumb) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Toolbar) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Player) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Video) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Web) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Win) LineXySet(x1 C.Evas_Coord, y1 C.Evas_Coord, x2 C.Evas_Coord, y2 C.Evas_Coord) () {
  C.evas_object_line_xy_set(self.obj, x1, y1, x2, y2)
}

func (self *Icon) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Scroller) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Entry) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *List) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Ctxpopup) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Dayselector) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *FileselectorButton) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *FileselectorEntry) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Fileselector) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Hoversel) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Multibuttonentry) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Naviframe) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Popup) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Actionslider) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Bg) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Box) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Bubble) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Button) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Calendar) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Check) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Clock) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Colorselector) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Conformant) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Datetime) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Diskselector) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Flip) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Flipselector) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Frame) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Gengrid) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Genlist) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *GestureLayer) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Glview) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Grid) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Hover) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Image) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Index) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *WinInwin) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Label) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Layout) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Map) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *MapTrack) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Mapbuf) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Menu) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Notify) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Panel) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Panes) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Photocam) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Photo) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Plug) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Progressbar) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Radio) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Route) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *SegmentControl) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Separator) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Slider) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Slideshow) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Spinner) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Table) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Thumb) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Toolbar) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Player) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Video) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Web) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Win) PolygonPointAdd(x C.Evas_Coord, y C.Evas_Coord) () {
  C.evas_object_polygon_point_add(self.obj, x, y)
}

func (self *Icon) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Scroller) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Entry) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *List) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Ctxpopup) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Dayselector) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *FileselectorButton) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *FileselectorEntry) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Fileselector) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Hoversel) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Multibuttonentry) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Naviframe) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Popup) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Actionslider) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Bg) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Box) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Bubble) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Button) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Calendar) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Check) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Clock) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Colorselector) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Conformant) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Datetime) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Diskselector) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Flip) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Flipselector) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Frame) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Gengrid) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Genlist) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *GestureLayer) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Glview) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Grid) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Hover) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Image) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Index) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *WinInwin) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Label) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Layout) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Map) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *MapTrack) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Mapbuf) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Menu) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Notify) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Panel) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Panes) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Photocam) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Photo) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Plug) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Progressbar) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Radio) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Route) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *SegmentControl) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Separator) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Slider) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Slideshow) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Spinner) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Table) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Thumb) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Toolbar) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Player) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Video) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Web) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Win) PolygonPointsClear() () {
  C.evas_object_polygon_points_clear(self.obj)
}

func (self *Icon) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Scroller) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Entry) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *List) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Ctxpopup) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Dayselector) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *FileselectorButton) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *FileselectorEntry) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Fileselector) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Hoversel) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Multibuttonentry) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Naviframe) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Popup) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Actionslider) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Bg) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Box) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Bubble) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Button) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Calendar) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Check) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Clock) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Colorselector) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Conformant) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Datetime) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Diskselector) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Flip) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Flipselector) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Frame) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Gengrid) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Genlist) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *GestureLayer) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Glview) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Grid) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Hover) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Image) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Index) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *WinInwin) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Label) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Layout) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Map) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *MapTrack) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Mapbuf) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Menu) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Notify) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Panel) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Panes) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Photocam) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Photo) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Plug) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Progressbar) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Radio) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Route) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *SegmentControl) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Separator) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Slider) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Slideshow) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Spinner) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Table) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Thumb) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Toolbar) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Player) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Video) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Web) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Win) IsFrameObjectSet(is_frame bool) () {
  _c_is_frame := (C.Eina_Bool)(0)
  if is_frame { _c_is_frame = (C.Eina_Bool)(1) }
  C.evas_object_is_frame_object_set(self.obj, _c_is_frame)
}

func (self *Icon) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) IsFrameObjectGet() (bool) {
  _cgo_return_ := C.evas_object_is_frame_object_get(self.obj)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Scroller) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Entry) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *List) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Ctxpopup) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Dayselector) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *FileselectorButton) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *FileselectorEntry) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Fileselector) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Hoversel) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Multibuttonentry) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Naviframe) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Popup) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Actionslider) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Bg) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Box) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Bubble) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Button) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Calendar) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Check) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Clock) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Colorselector) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Conformant) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Datetime) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Diskselector) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Flip) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Flipselector) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Frame) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Gengrid) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Genlist) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *GestureLayer) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Glview) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Grid) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Hover) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Image) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Index) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *WinInwin) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Label) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Layout) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Map) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *MapTrack) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Mapbuf) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Menu) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Notify) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Panel) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Panes) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Photocam) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Photo) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Plug) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Progressbar) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Radio) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Route) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *SegmentControl) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Separator) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Slider) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Slideshow) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Spinner) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Table) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Thumb) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Toolbar) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Player) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Video) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Web) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Win) SmartMemberAdd(smart_obj EvasObjectInterface) () {
  var _c_smart_obj *C.Evas_Object
  if smart_obj != nil { _c_smart_obj = smart_obj.GetObj() }
  C.evas_object_smart_member_add(self.obj, _c_smart_obj)
}

func (self *Icon) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Scroller) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Entry) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *List) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Ctxpopup) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Dayselector) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *FileselectorButton) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *FileselectorEntry) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Fileselector) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Hoversel) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Multibuttonentry) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Naviframe) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Popup) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Actionslider) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Bg) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Box) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Bubble) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Button) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Calendar) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Check) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Clock) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Colorselector) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Conformant) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Datetime) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Diskselector) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Flip) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Flipselector) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Frame) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Gengrid) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Genlist) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *GestureLayer) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Glview) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Grid) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Hover) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Image) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Index) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *WinInwin) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Label) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Layout) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Map) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *MapTrack) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Mapbuf) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Menu) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Notify) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Panel) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Panes) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Photocam) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Photo) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Plug) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Progressbar) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Radio) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Route) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *SegmentControl) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Separator) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Slider) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Slideshow) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Spinner) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Table) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Thumb) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Toolbar) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Player) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Video) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Web) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Win) SmartMemberDel() () {
  C.evas_object_smart_member_del(self.obj)
}

func (self *Icon) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Scroller) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Entry) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *List) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Ctxpopup) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Dayselector) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *FileselectorButton) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *FileselectorEntry) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Fileselector) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Hoversel) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Multibuttonentry) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Naviframe) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Popup) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Actionslider) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Bg) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Box) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Bubble) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Button) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Calendar) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Check) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Clock) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Colorselector) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Conformant) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Datetime) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Diskselector) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Flip) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Flipselector) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Frame) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Gengrid) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Genlist) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *GestureLayer) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Glview) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Grid) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Hover) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Image) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Index) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *WinInwin) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Label) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Layout) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Map) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *MapTrack) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Mapbuf) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Menu) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Notify) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Panel) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Panes) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Photocam) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Photo) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Plug) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Progressbar) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Radio) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Route) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *SegmentControl) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Separator) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Slider) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Slideshow) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Spinner) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Table) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Thumb) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Toolbar) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Player) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Video) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Web) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Win) SmartDataSet(data unsafe.Pointer) () {
  C.evas_object_smart_data_set(self.obj, data)
}

func (self *Icon) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Scroller) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Entry) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *List) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Ctxpopup) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Dayselector) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *FileselectorButton) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *FileselectorEntry) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Fileselector) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Hoversel) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Multibuttonentry) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Naviframe) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Popup) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Actionslider) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Bg) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Box) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Bubble) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Button) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Calendar) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Check) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Clock) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Colorselector) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Conformant) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Datetime) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Diskselector) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Flip) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Flipselector) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Frame) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Gengrid) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Genlist) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *GestureLayer) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Glview) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Grid) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Hover) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Image) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Index) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *WinInwin) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Label) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Layout) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Map) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *MapTrack) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Mapbuf) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Menu) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Notify) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Panel) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Panes) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Photocam) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Photo) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Plug) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Progressbar) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Radio) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Route) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *SegmentControl) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Separator) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Slider) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Slideshow) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Spinner) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Table) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Thumb) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Toolbar) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Player) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Video) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Web) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Win) SmartCallbackCall(event string, event_info unsafe.Pointer) () {
  _c_event := C.CString(event)
  C.evas_object_smart_callback_call(self.obj, _c_event, event_info)
}

func (self *Icon) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) SmartCallbacksDescriptionsSet(descriptions *C.Evas_Smart_Cb_Description) (bool) {
  _cgo_return_ := C.evas_object_smart_callbacks_descriptions_set(self.obj, descriptions)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Scroller) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Entry) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *List) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Ctxpopup) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Dayselector) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *FileselectorButton) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *FileselectorEntry) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Fileselector) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Hoversel) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Multibuttonentry) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Naviframe) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Popup) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Actionslider) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Bg) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Box) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Bubble) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Button) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Calendar) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Check) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Clock) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Colorselector) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Conformant) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Datetime) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Diskselector) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Flip) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Flipselector) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Frame) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Gengrid) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Genlist) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *GestureLayer) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Glview) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Grid) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Hover) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Image) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Index) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *WinInwin) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Label) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Layout) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Map) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *MapTrack) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Mapbuf) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Menu) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Notify) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Panel) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Panes) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Photocam) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Photo) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Plug) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Progressbar) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Radio) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Route) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *SegmentControl) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Separator) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Slider) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Slideshow) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Spinner) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Table) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Thumb) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Toolbar) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Player) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Video) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Web) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Win) SmartChanged() () {
  C.evas_object_smart_changed(self.obj)
}

func (self *Icon) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Scroller) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Entry) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *List) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Ctxpopup) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Dayselector) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *FileselectorButton) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *FileselectorEntry) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Fileselector) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Hoversel) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Multibuttonentry) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Naviframe) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Popup) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Actionslider) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Bg) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Box) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Bubble) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Button) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Calendar) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Check) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Clock) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Colorselector) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Conformant) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Datetime) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Diskselector) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Flip) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Flipselector) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Frame) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Gengrid) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Genlist) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *GestureLayer) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Glview) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Grid) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Hover) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Image) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Index) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *WinInwin) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Label) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Layout) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Map) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *MapTrack) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Mapbuf) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Menu) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Notify) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Panel) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Panes) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Photocam) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Photo) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Plug) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Progressbar) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Radio) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Route) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *SegmentControl) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Separator) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Slider) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Slideshow) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Spinner) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Table) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Thumb) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Toolbar) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Player) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Video) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Web) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Win) SmartNeedRecalculateSet(value bool) () {
  _c_value := (C.Eina_Bool)(0)
  if value { _c_value = (C.Eina_Bool)(1) }
  C.evas_object_smart_need_recalculate_set(self.obj, _c_value)
}

func (self *Icon) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Scroller) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Entry) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *List) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Ctxpopup) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Dayselector) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *FileselectorButton) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *FileselectorEntry) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Fileselector) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Hoversel) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Multibuttonentry) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Naviframe) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Popup) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Actionslider) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Bg) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Box) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Bubble) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Button) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Calendar) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Check) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Clock) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Colorselector) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Conformant) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Datetime) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Diskselector) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Flip) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Flipselector) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Frame) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Gengrid) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Genlist) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *GestureLayer) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Glview) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Grid) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Hover) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Image) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Index) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *WinInwin) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Label) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Layout) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Map) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *MapTrack) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Mapbuf) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Menu) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Notify) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Panel) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Panes) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Photocam) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Photo) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Plug) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Progressbar) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Radio) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Route) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *SegmentControl) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Separator) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Slider) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Slideshow) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Spinner) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Table) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Thumb) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Toolbar) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Player) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Video) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Web) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Win) SmartCalculate() () {
  C.evas_object_smart_calculate(self.obj)
}

func (self *Icon) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Scroller) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Entry) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *List) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Ctxpopup) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Dayselector) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *FileselectorButton) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *FileselectorEntry) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Fileselector) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Hoversel) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Multibuttonentry) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Naviframe) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Popup) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Actionslider) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Bg) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Box) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Bubble) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Button) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Calendar) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Check) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Clock) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Colorselector) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Conformant) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Datetime) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Diskselector) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Flip) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Flipselector) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Frame) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Gengrid) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Genlist) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *GestureLayer) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Glview) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Grid) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Hover) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Image) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Index) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *WinInwin) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Label) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Layout) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Map) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *MapTrack) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Mapbuf) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Menu) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Notify) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Panel) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Panes) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Photocam) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Photo) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Plug) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Progressbar) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Radio) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Route) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *SegmentControl) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Separator) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Slider) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Slideshow) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Spinner) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Table) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Thumb) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Toolbar) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Player) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Video) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Web) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Win) SmartMoveChildrenRelative(dx C.Evas_Coord, dy C.Evas_Coord) () {
  C.evas_object_smart_move_children_relative(self.obj, dx, dy)
}

func (self *Icon) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Scroller) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Entry) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *List) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Ctxpopup) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Dayselector) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorButton) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorEntry) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Fileselector) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hoversel) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Multibuttonentry) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Naviframe) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Popup) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Actionslider) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bg) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Box) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bubble) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Button) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Calendar) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Check) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Clock) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Colorselector) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Conformant) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Datetime) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Diskselector) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flip) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flipselector) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Frame) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Gengrid) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Genlist) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *GestureLayer) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Glview) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Grid) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hover) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Image) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Index) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *WinInwin) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Label) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Layout) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Map) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *MapTrack) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Mapbuf) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Menu) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Notify) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panel) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panes) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photocam) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photo) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Plug) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Progressbar) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Radio) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Route) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *SegmentControl) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Separator) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slider) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slideshow) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Spinner) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Table) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Thumb) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Toolbar) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Player) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Video) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Web) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Win) SmartClippedClipperGet() (*EvasObject) {
  _cgo_return_ := C.evas_object_smart_clipped_clipper_get(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Icon) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Scroller) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Entry) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *List) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Ctxpopup) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Dayselector) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorButton) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorEntry) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Fileselector) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hoversel) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Multibuttonentry) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Naviframe) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Popup) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Actionslider) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bg) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Box) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bubble) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Button) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Calendar) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Check) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Clock) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Colorselector) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Conformant) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Datetime) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Diskselector) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flip) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flipselector) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Frame) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Gengrid) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Genlist) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *GestureLayer) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Glview) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Grid) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hover) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Image) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Index) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *WinInwin) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Label) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Layout) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Map) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *MapTrack) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Mapbuf) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Menu) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Notify) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panel) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panes) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photocam) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photo) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Plug) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Progressbar) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Radio) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Route) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *SegmentControl) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Separator) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slider) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slideshow) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Spinner) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Table) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Thumb) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Toolbar) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Player) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Video) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Web) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Win) BoxAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_box_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Icon) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Entry) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *List) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Popup) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Bg) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Box) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Button) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Check) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Clock) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Flip) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Frame) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Glview) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Grid) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Hover) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Image) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Index) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Label) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Layout) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Map) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Menu) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Notify) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Panel) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Panes) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Photo) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Plug) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Radio) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Route) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Separator) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Slider) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Table) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Player) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Video) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Web) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Win) BoxLayoutHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_horizontal(self.obj, priv, data)
}

func (self *Icon) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Entry) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *List) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Popup) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Bg) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Box) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Button) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Check) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Clock) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Flip) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Frame) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Glview) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Grid) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Hover) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Image) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Index) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Label) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Layout) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Map) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Menu) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Notify) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Panel) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Panes) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Photo) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Plug) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Radio) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Route) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Separator) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Slider) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Table) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Player) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Video) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Web) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Win) BoxLayoutVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_vertical(self.obj, priv, data)
}

func (self *Icon) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Entry) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *List) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Popup) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Bg) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Box) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Button) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Check) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Clock) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Flip) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Frame) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Glview) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Grid) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Hover) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Image) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Index) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Label) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Layout) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Map) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Menu) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Notify) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Panel) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Panes) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Photo) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Plug) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Radio) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Route) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Separator) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Slider) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Table) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Player) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Video) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Web) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Win) BoxLayoutHomogeneousVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_vertical(self.obj, priv, data)
}

func (self *Icon) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Entry) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *List) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Popup) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Bg) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Box) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Button) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Check) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Clock) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Flip) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Frame) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Glview) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Grid) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Hover) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Image) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Index) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Label) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Layout) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Map) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Menu) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Notify) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Panel) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Panes) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Photo) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Plug) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Radio) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Route) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Separator) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Slider) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Table) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Player) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Video) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Web) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Win) BoxLayoutHomogeneousHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_horizontal(self.obj, priv, data)
}

func (self *Icon) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Entry) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *List) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Popup) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Bg) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Box) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Button) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Check) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Clock) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Flip) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Frame) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Glview) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Grid) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Hover) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Image) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Index) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Label) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Layout) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Map) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Menu) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Notify) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Panel) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Panes) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Photo) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Plug) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Radio) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Route) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Separator) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Slider) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Table) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Player) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Video) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Web) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Win) BoxLayoutHomogeneousMaxSizeHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_horizontal(self.obj, priv, data)
}

func (self *Icon) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Entry) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *List) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Popup) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Bg) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Box) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Button) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Check) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Clock) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Flip) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Frame) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Glview) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Grid) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Hover) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Image) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Index) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Label) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Layout) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Map) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Menu) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Notify) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Panel) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Panes) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Photo) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Plug) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Radio) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Route) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Separator) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Slider) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Table) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Player) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Video) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Web) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Win) BoxLayoutHomogeneousMaxSizeVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_homogeneous_max_size_vertical(self.obj, priv, data)
}

func (self *Icon) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Entry) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *List) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Popup) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Bg) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Box) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Button) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Check) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Clock) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Flip) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Frame) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Glview) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Grid) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Hover) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Image) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Index) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Label) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Layout) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Map) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Menu) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Notify) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Panel) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Panes) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Photo) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Plug) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Radio) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Route) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Separator) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Slider) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Table) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Player) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Video) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Web) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Win) BoxLayoutFlowHorizontal(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_horizontal(self.obj, priv, data)
}

func (self *Icon) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Entry) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *List) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Popup) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Bg) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Box) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Button) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Check) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Clock) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Flip) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Frame) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Glview) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Grid) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Hover) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Image) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Index) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Label) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Layout) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Map) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Menu) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Notify) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Panel) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Panes) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Photo) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Plug) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Radio) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Route) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Separator) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Slider) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Table) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Player) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Video) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Web) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Win) BoxLayoutFlowVertical(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_flow_vertical(self.obj, priv, data)
}

func (self *Icon) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Scroller) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Entry) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *List) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Ctxpopup) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Dayselector) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *FileselectorButton) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *FileselectorEntry) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Fileselector) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Hoversel) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Multibuttonentry) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Naviframe) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Popup) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Actionslider) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Bg) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Box) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Bubble) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Button) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Calendar) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Check) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Clock) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Colorselector) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Conformant) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Datetime) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Diskselector) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Flip) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Flipselector) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Frame) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Gengrid) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Genlist) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *GestureLayer) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Glview) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Grid) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Hover) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Image) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Index) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *WinInwin) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Label) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Layout) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Map) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *MapTrack) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Mapbuf) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Menu) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Notify) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Panel) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Panes) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Photocam) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Photo) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Plug) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Progressbar) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Radio) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Route) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *SegmentControl) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Separator) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Slider) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Slideshow) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Spinner) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Table) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Thumb) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Toolbar) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Player) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Video) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Web) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Win) BoxLayoutStack(priv *C.Evas_Object_Box_Data, data unsafe.Pointer) () {
  C.evas_object_box_layout_stack(self.obj, priv, data)
}

func (self *Icon) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Scroller) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Entry) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *List) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Ctxpopup) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Dayselector) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *FileselectorButton) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *FileselectorEntry) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Fileselector) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Hoversel) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Multibuttonentry) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Naviframe) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Popup) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Actionslider) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Bg) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Box) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Bubble) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Button) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Calendar) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Check) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Clock) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Colorselector) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Conformant) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Datetime) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Diskselector) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Flip) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Flipselector) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Frame) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Gengrid) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Genlist) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *GestureLayer) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Glview) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Grid) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Hover) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Image) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Index) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *WinInwin) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Label) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Layout) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Map) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *MapTrack) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Mapbuf) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Menu) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Notify) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Panel) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Panes) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Photocam) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Photo) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Plug) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Progressbar) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Radio) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Route) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *SegmentControl) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Separator) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Slider) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Slideshow) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Spinner) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Table) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Thumb) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Toolbar) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Player) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Video) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Web) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Win) BoxAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_box_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Icon) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Scroller) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Entry) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *List) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Ctxpopup) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Dayselector) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *FileselectorButton) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *FileselectorEntry) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Fileselector) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Hoversel) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Multibuttonentry) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Naviframe) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Popup) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Actionslider) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Bg) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Box) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Bubble) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Button) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Calendar) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Check) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Clock) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Colorselector) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Conformant) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Datetime) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Diskselector) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Flip) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Flipselector) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Frame) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Gengrid) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Genlist) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *GestureLayer) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Glview) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Grid) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Hover) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Image) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Index) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *WinInwin) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Label) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Layout) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Map) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *MapTrack) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Mapbuf) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Menu) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Notify) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Panel) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Panes) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Photocam) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Photo) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Plug) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Progressbar) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Radio) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Route) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *SegmentControl) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Separator) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Slider) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Slideshow) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Spinner) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Table) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Thumb) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Toolbar) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Player) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Video) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Web) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Win) BoxPaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_box_padding_set(self.obj, horizontal, vertical)
}

func (self *Icon) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Scroller) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Entry) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *List) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Ctxpopup) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Dayselector) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorButton) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorEntry) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Fileselector) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hoversel) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Multibuttonentry) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Naviframe) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Popup) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Actionslider) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bg) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Box) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bubble) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Button) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Calendar) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Check) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Clock) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Colorselector) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Conformant) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Datetime) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Diskselector) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flip) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flipselector) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Frame) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Gengrid) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Genlist) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *GestureLayer) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Glview) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Grid) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hover) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Image) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Index) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *WinInwin) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Label) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Layout) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Map) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *MapTrack) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Mapbuf) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Menu) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Notify) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panel) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panes) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photocam) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photo) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Plug) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Progressbar) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Radio) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Route) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *SegmentControl) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Separator) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slider) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slideshow) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Spinner) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Table) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Thumb) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Toolbar) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Player) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Video) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Web) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Win) BoxAppend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_append(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Icon) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Scroller) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Entry) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *List) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Ctxpopup) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Dayselector) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorButton) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorEntry) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Fileselector) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hoversel) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Multibuttonentry) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Naviframe) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Popup) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Actionslider) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bg) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Box) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bubble) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Button) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Calendar) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Check) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Clock) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Colorselector) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Conformant) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Datetime) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Diskselector) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flip) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flipselector) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Frame) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Gengrid) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Genlist) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *GestureLayer) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Glview) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Grid) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hover) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Image) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Index) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *WinInwin) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Label) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Layout) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Map) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *MapTrack) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Mapbuf) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Menu) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Notify) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panel) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panes) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photocam) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photo) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Plug) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Progressbar) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Radio) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Route) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *SegmentControl) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Separator) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slider) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slideshow) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Spinner) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Table) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Thumb) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Toolbar) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Player) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Video) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Web) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Win) BoxPrepend(child EvasObjectInterface) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_prepend(self.obj, _c_child)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Icon) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Scroller) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Entry) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *List) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Ctxpopup) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Dayselector) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorButton) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorEntry) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Fileselector) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hoversel) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Multibuttonentry) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Naviframe) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Popup) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Actionslider) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bg) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Box) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bubble) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Button) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Calendar) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Check) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Clock) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Colorselector) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Conformant) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Datetime) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Diskselector) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flip) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flipselector) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Frame) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Gengrid) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Genlist) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *GestureLayer) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Glview) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Grid) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hover) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Image) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Index) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *WinInwin) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Label) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Layout) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Map) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *MapTrack) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Mapbuf) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Menu) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Notify) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panel) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panes) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photocam) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photo) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Plug) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Progressbar) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Radio) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Route) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *SegmentControl) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Separator) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slider) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slideshow) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Spinner) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Table) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Thumb) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Toolbar) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Player) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Video) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Web) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Win) BoxInsertBefore(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_before(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Icon) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Scroller) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Entry) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *List) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Ctxpopup) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Dayselector) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorButton) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorEntry) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Fileselector) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hoversel) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Multibuttonentry) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Naviframe) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Popup) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Actionslider) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bg) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Box) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bubble) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Button) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Calendar) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Check) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Clock) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Colorselector) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Conformant) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Datetime) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Diskselector) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flip) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flipselector) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Frame) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Gengrid) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Genlist) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *GestureLayer) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Glview) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Grid) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hover) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Image) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Index) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *WinInwin) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Label) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Layout) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Map) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *MapTrack) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Mapbuf) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Menu) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Notify) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panel) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panes) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photocam) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photo) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Plug) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Progressbar) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Radio) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Route) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *SegmentControl) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Separator) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slider) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slideshow) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Spinner) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Table) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Thumb) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Toolbar) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Player) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Video) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Web) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Win) BoxInsertAfter(child EvasObjectInterface, reference *C.Evas_Object) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_insert_after(self.obj, _c_child, reference)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Icon) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Scroller) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Entry) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *List) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Ctxpopup) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Dayselector) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorButton) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *FileselectorEntry) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Fileselector) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hoversel) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Multibuttonentry) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Naviframe) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Popup) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Actionslider) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bg) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Box) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Bubble) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Button) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Calendar) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Check) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Clock) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Colorselector) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Conformant) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Datetime) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Diskselector) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flip) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Flipselector) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Frame) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Gengrid) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Genlist) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *GestureLayer) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Glview) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Grid) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Hover) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Image) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Index) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *WinInwin) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Label) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Layout) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Map) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *MapTrack) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Mapbuf) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Menu) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Notify) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panel) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Panes) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photocam) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Photo) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Plug) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Progressbar) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Radio) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Route) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *SegmentControl) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Separator) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slider) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Slideshow) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Spinner) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Table) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Thumb) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Toolbar) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Player) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Video) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Web) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Win) BoxInsertAt(child EvasObjectInterface, pos uint) (*C.Evas_Object_Box_Option) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_insert_at(self.obj, _c_child, _c_pos)
  _go_return_ := _cgo_return_
  return _go_return_
}

func (self *Icon) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) BoxRemove(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_box_remove(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) BoxRemoveAt(pos uint) (bool) {
  _c_pos := C.uint(pos)
  _cgo_return_ := C.evas_object_box_remove_at(self.obj, _c_pos)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) BoxRemoveAll(clear bool) (bool) {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_box_remove_all(self.obj, _c_clear)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Scroller) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Entry) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *List) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Ctxpopup) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Dayselector) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorButton) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorEntry) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Fileselector) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hoversel) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Multibuttonentry) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Naviframe) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Popup) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Actionslider) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bg) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Box) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bubble) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Button) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Calendar) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Check) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Clock) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Colorselector) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Conformant) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Datetime) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Diskselector) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flip) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flipselector) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Frame) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Gengrid) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Genlist) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *GestureLayer) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Glview) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Grid) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hover) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Image) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Index) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *WinInwin) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Label) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Layout) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Map) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *MapTrack) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Mapbuf) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Menu) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Notify) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panel) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panes) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photocam) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photo) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Plug) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Progressbar) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Radio) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Route) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *SegmentControl) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Separator) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slider) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slideshow) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Spinner) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Table) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Thumb) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Toolbar) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Player) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Video) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Web) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Win) TableAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_table_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Icon) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Scroller) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Entry) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *List) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Ctxpopup) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Dayselector) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *FileselectorButton) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *FileselectorEntry) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Fileselector) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Hoversel) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Multibuttonentry) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Naviframe) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Popup) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Actionslider) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Bg) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Box) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Bubble) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Button) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Calendar) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Check) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Clock) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Colorselector) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Conformant) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Datetime) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Diskselector) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Flip) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Flipselector) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Frame) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Gengrid) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Genlist) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *GestureLayer) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Glview) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Grid) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Hover) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Image) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Index) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *WinInwin) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Label) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Layout) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Map) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *MapTrack) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Mapbuf) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Menu) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Notify) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Panel) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Panes) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Photocam) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Photo) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Plug) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Progressbar) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Radio) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Route) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *SegmentControl) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Separator) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Slider) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Slideshow) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Spinner) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Table) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Thumb) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Toolbar) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Player) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Video) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Web) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Win) TableHomogeneousSet(homogeneous C.Evas_Object_Table_Homogeneous_Mode) () {
  C.evas_object_table_homogeneous_set(self.obj, homogeneous)
}

func (self *Icon) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Scroller) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Entry) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *List) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Ctxpopup) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Dayselector) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *FileselectorButton) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *FileselectorEntry) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Fileselector) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Hoversel) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Multibuttonentry) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Naviframe) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Popup) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Actionslider) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Bg) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Box) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Bubble) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Button) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Calendar) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Check) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Clock) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Colorselector) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Conformant) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Datetime) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Diskselector) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Flip) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Flipselector) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Frame) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Gengrid) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Genlist) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *GestureLayer) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Glview) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Grid) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Hover) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Image) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Index) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *WinInwin) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Label) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Layout) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Map) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *MapTrack) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Mapbuf) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Menu) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Notify) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Panel) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Panes) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Photocam) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Photo) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Plug) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Progressbar) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Radio) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Route) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *SegmentControl) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Separator) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Slider) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Slideshow) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Spinner) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Table) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Thumb) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Toolbar) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Player) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Video) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Web) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Win) TablePaddingSet(horizontal C.Evas_Coord, vertical C.Evas_Coord) () {
  C.evas_object_table_padding_set(self.obj, horizontal, vertical)
}

func (self *Icon) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Scroller) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Entry) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *List) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Ctxpopup) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Dayselector) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *FileselectorButton) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *FileselectorEntry) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Fileselector) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Hoversel) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Multibuttonentry) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Naviframe) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Popup) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Actionslider) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Bg) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Box) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Bubble) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Button) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Calendar) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Check) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Clock) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Colorselector) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Conformant) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Datetime) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Diskselector) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Flip) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Flipselector) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Frame) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Gengrid) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Genlist) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *GestureLayer) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Glview) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Grid) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Hover) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Image) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Index) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *WinInwin) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Label) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Layout) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Map) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *MapTrack) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Mapbuf) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Menu) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Notify) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Panel) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Panes) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Photocam) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Photo) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Plug) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Progressbar) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Radio) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Route) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *SegmentControl) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Separator) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Slider) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Slideshow) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Spinner) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Table) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Thumb) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Toolbar) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Player) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Video) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Web) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Win) TableAlignSet(horizontal float64, vertical float64) () {
  _c_horizontal := C.double(horizontal)
  _c_vertical := C.double(vertical)
  C.evas_object_table_align_set(self.obj, _c_horizontal, _c_vertical)
}

func (self *Icon) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Scroller) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Entry) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *List) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Ctxpopup) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Dayselector) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *FileselectorButton) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *FileselectorEntry) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Fileselector) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Hoversel) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Multibuttonentry) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Naviframe) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Popup) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Actionslider) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Bg) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Box) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Bubble) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Button) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Calendar) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Check) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Clock) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Colorselector) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Conformant) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Datetime) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Diskselector) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Flip) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Flipselector) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Frame) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Gengrid) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Genlist) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *GestureLayer) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Glview) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Grid) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Hover) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Image) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Index) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *WinInwin) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Label) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Layout) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Map) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *MapTrack) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Mapbuf) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Menu) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Notify) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Panel) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Panes) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Photocam) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Photo) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Plug) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Progressbar) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Radio) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Route) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *SegmentControl) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Separator) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Slider) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Slideshow) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Spinner) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Table) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Thumb) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Toolbar) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Player) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Video) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Web) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Win) TableMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_table_mirrored_set(self.obj, _c_mirrored)
}

func (self *Icon) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) TablePack(child EvasObjectInterface, col uint, row uint, colspan uint, rowspan uint) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_col := C.ushort(col)
  _c_row := C.ushort(row)
  _c_colspan := C.ushort(colspan)
  _c_rowspan := C.ushort(rowspan)
  _cgo_return_ := C.evas_object_table_pack(self.obj, _c_child, _c_col, _c_row, _c_colspan, _c_rowspan)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) TableUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_table_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Scroller) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Entry) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *List) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Ctxpopup) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Dayselector) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *FileselectorButton) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *FileselectorEntry) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Fileselector) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Hoversel) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Multibuttonentry) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Naviframe) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Popup) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Actionslider) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Bg) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Box) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Bubble) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Button) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Calendar) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Check) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Clock) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Colorselector) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Conformant) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Datetime) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Diskselector) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Flip) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Flipselector) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Frame) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Gengrid) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Genlist) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *GestureLayer) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Glview) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Grid) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Hover) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Image) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Index) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *WinInwin) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Label) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Layout) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Map) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *MapTrack) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Mapbuf) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Menu) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Notify) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Panel) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Panes) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Photocam) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Photo) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Plug) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Progressbar) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Radio) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Route) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *SegmentControl) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Separator) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Slider) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Slideshow) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Spinner) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Table) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Thumb) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Toolbar) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Player) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Video) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Web) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Win) TableClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_table_clear(self.obj, _c_clear)
}

func (self *Icon) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Scroller) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Entry) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *List) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Ctxpopup) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Dayselector) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorButton) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *FileselectorEntry) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Fileselector) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hoversel) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Multibuttonentry) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Naviframe) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Popup) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Actionslider) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bg) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Box) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Bubble) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Button) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Calendar) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Check) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Clock) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Colorselector) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Conformant) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Datetime) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Diskselector) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flip) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Flipselector) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Frame) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Gengrid) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Genlist) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *GestureLayer) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Glview) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Grid) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Hover) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Image) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Index) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *WinInwin) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Label) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Layout) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Map) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *MapTrack) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Mapbuf) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Menu) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Notify) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panel) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Panes) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photocam) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Photo) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Plug) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Progressbar) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Radio) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Route) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *SegmentControl) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Separator) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slider) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Slideshow) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Spinner) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Table) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Thumb) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Toolbar) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Player) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Video) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Web) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Win) GridAddTo() (*EvasObject) {
  _cgo_return_ := C.evas_object_grid_add_to(self.obj)
  _go_return_ := &EvasObject{_cgo_return_}
  return _go_return_
}

func (self *Icon) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Scroller) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Entry) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *List) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Ctxpopup) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Dayselector) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorButton) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *FileselectorEntry) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Fileselector) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Hoversel) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Multibuttonentry) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Naviframe) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Popup) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Actionslider) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Bg) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Box) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Bubble) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Button) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Calendar) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Check) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Clock) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Colorselector) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Conformant) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Datetime) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Diskselector) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Flip) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Flipselector) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Frame) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Gengrid) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Genlist) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *GestureLayer) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Glview) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Grid) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Hover) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Image) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Index) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *WinInwin) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Label) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Layout) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Map) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *MapTrack) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Mapbuf) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Menu) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Notify) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Panel) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Panes) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Photocam) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Photo) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Plug) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Progressbar) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Radio) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Route) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *SegmentControl) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Separator) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Slider) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Slideshow) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Spinner) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Table) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Thumb) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Toolbar) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Player) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Video) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Web) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Win) GridSizeSet(w int, h int) () {
  _c_w := C.int(w)
  _c_h := C.int(h)
  C.evas_object_grid_size_set(self.obj, _c_w, _c_h)
}

func (self *Icon) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Scroller) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Entry) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *List) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Ctxpopup) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Dayselector) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *FileselectorButton) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *FileselectorEntry) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Fileselector) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Hoversel) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Multibuttonentry) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Naviframe) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Popup) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Actionslider) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Bg) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Box) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Bubble) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Button) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Calendar) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Check) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Clock) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Colorselector) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Conformant) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Datetime) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Diskselector) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Flip) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Flipselector) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Frame) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Gengrid) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Genlist) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *GestureLayer) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Glview) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Grid) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Hover) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Image) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Index) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *WinInwin) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Label) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Layout) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Map) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *MapTrack) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Mapbuf) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Menu) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Notify) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Panel) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Panes) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Photocam) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Photo) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Plug) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Progressbar) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Radio) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Route) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *SegmentControl) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Separator) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Slider) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Slideshow) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Spinner) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Table) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Thumb) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Toolbar) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Player) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Video) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Web) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Win) GridMirroredSet(mirrored bool) () {
  _c_mirrored := (C.Eina_Bool)(0)
  if mirrored { _c_mirrored = (C.Eina_Bool)(1) }
  C.evas_object_grid_mirrored_set(self.obj, _c_mirrored)
}

func (self *Icon) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) GridPack(child EvasObjectInterface, x int, y int, w int, h int) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _c_x := C.int(x)
  _c_y := C.int(y)
  _c_w := C.int(w)
  _c_h := C.int(h)
  _cgo_return_ := C.evas_object_grid_pack(self.obj, _c_child, _c_x, _c_y, _c_w, _c_h)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) GridUnpack(child EvasObjectInterface) (bool) {
  var _c_child *C.Evas_Object
  if child != nil { _c_child = child.GetObj() }
  _cgo_return_ := C.evas_object_grid_unpack(self.obj, _c_child)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Scroller) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Entry) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *List) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Ctxpopup) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Dayselector) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *FileselectorButton) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *FileselectorEntry) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Fileselector) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Hoversel) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Multibuttonentry) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Naviframe) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Popup) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Actionslider) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Bg) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Box) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Bubble) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Button) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Calendar) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Check) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Clock) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Colorselector) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Conformant) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Datetime) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Diskselector) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Flip) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Flipselector) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Frame) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Gengrid) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Genlist) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *GestureLayer) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Glview) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Grid) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Hover) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Image) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Index) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *WinInwin) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Label) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Layout) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Map) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *MapTrack) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Mapbuf) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Menu) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Notify) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Panel) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Panes) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Photocam) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Photo) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Plug) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Progressbar) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Radio) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Route) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *SegmentControl) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Separator) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Slider) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Slideshow) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Spinner) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Table) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Thumb) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Toolbar) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Player) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Video) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Web) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Win) GridClear(clear bool) () {
  _c_clear := (C.Eina_Bool)(0)
  if clear { _c_clear = (C.Eina_Bool)(1) }
  C.evas_object_grid_clear(self.obj, _c_clear)
}

func (self *Icon) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Scroller) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Entry) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *List) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Ctxpopup) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Dayselector) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorButton) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *FileselectorEntry) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Fileselector) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hoversel) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Multibuttonentry) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Naviframe) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Popup) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Actionslider) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bg) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Box) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Bubble) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Button) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Calendar) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Check) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Clock) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Colorselector) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Conformant) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Datetime) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Diskselector) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flip) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Flipselector) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Frame) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Gengrid) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Genlist) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *GestureLayer) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Glview) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Grid) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Hover) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Image) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Index) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *WinInwin) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Label) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Layout) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Map) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *MapTrack) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Mapbuf) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Menu) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Notify) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panel) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Panes) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photocam) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Photo) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Plug) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Progressbar) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Radio) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Route) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *SegmentControl) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Separator) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slider) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Slideshow) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Spinner) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Table) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Thumb) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Toolbar) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Player) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Video) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Web) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Win) KeyGrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask, exclusive bool) (bool) {
  _c_keyname := C.CString(keyname)
  _c_exclusive := (C.Eina_Bool)(0)
  if exclusive { _c_exclusive = (C.Eina_Bool)(1) }
  _cgo_return_ := C.evas_object_key_grab(self.obj, _c_keyname, modifiers, not_modifiers, _c_exclusive)
  _go_return_ := _cgo_return_ == (C.Eina_Bool)(1)
  return _go_return_
}

func (self *Icon) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Scroller) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Entry) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *List) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Ctxpopup) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Dayselector) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *FileselectorButton) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *FileselectorEntry) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Fileselector) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Hoversel) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Multibuttonentry) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Naviframe) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Popup) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Actionslider) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Bg) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Box) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Bubble) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Button) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Calendar) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Check) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Clock) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Colorselector) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Conformant) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Datetime) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Diskselector) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Flip) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Flipselector) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Frame) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Gengrid) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Genlist) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *GestureLayer) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Glview) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Grid) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Hover) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Image) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Index) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *WinInwin) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Label) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Layout) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Map) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *MapTrack) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Mapbuf) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Menu) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Notify) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Panel) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Panes) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Photocam) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Photo) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Plug) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Progressbar) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Radio) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Route) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *SegmentControl) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Separator) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Slider) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Slideshow) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Spinner) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Table) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Thumb) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Toolbar) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Player) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Video) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Web) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

func (self *Win) KeyUngrab(keyname string, modifiers C.Evas_Modifier_Mask, not_modifiers C.Evas_Modifier_Mask) () {
  _c_keyname := C.CString(keyname)
  C.evas_object_key_ungrab(self.obj, _c_keyname, modifiers, not_modifiers)
}

